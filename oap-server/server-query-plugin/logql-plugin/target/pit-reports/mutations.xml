<?xml version="1.0" encoding="UTF-8"?>
<mutations partial="true">
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>filterValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$FilterValueContext;</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>filterValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$FilterValueContext;</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>filterValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$FilterValueContext;</methodDescription><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>filterValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$FilterValueContext;</methodDescription><lineNumber>520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>57</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>filterValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$FilterValueContext;</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>64</index></indexes><blocks><block>9</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>filterValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$FilterValueContext;</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>68</index><index>38</index><index>77</index></indexes><blocks><block>6</block><block>10</block><block>12</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::exitRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>filterValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$FilterValueContext;</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>86</index></indexes><blocks><block>14</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser::filterValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>getATN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/atn/ATN;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser::getATN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>getGrammarFileName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with &quot;&quot; for org/apache/skywalking/logql/rt/grammar/LogQLParser::getGrammarFileName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>getRuleNames</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser::getRuleNames</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>getSerializedATN</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with &quot;&quot; for org/apache/skywalking/logql/rt/grammar/LogQLParser::getSerializedATN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>getTokenNames</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser::getTokenNames</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>getVocabulary</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/Vocabulary;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser::getVocabulary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelContext;</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelContext;</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelContext;</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelContext;</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>38</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelContext;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>49</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelContext;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>77</index></indexes><blocks><block>12</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelContext;</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>84</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelContext;</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>97</index><index>88</index><index>58</index></indexes><blocks><block>10</block><block>14</block><block>16</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::exitRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelContext;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>106</index></indexes><blocks><block>18</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser::label</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>57</index></indexes><blocks><block>10</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext;</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext;</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext;</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>38</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext;</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>44</index></indexes><blocks><block>7</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>62</index></indexes><blocks><block>11</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext;</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>73</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext;</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>83</index></indexes><blocks><block>15</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext;</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>89</index></indexes><blocks><block>16</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>121</index></indexes><blocks><block>21</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext;</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>128</index></indexes><blocks><block>22</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext;</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>132</index><index>102</index><index>142</index></indexes><blocks><block>19</block><block>23</block><block>25</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::exitRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>151</index></indexes><blocks><block>27</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser::labelList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelNameContext;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelNameContext;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelNameContext;</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelNameContext;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>57</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelNameContext;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>64</index></indexes><blocks><block>9</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelNameContext;</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>68</index><index>38</index><index>77</index></indexes><blocks><block>6</block><block>10</block><block>12</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::exitRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelNameContext;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>86</index></indexes><blocks><block>14</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser::labelName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelValueContext;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelValueContext;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelValueContext;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelValueContext;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>57</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelValueContext;</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>64</index></indexes><blocks><block>9</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelValueContext;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>68</index><index>38</index><index>77</index></indexes><blocks><block>6</block><block>10</block><block>12</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::exitRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>labelValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelValueContext;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>86</index></indexes><blocks><block>14</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser::labelValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilter</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterContext;</methodDescription><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilter</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterContext;</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilter</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterContext;</methodDescription><lineNumber>562</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilter</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterContext;</methodDescription><lineNumber>564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>38</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilter</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterContext;</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>66</index></indexes><blocks><block>10</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilter</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterContext;</methodDescription><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>73</index></indexes><blocks><block>11</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilter</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterContext;</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>86</index><index>77</index><index>47</index></indexes><blocks><block>8</block><block>12</block><block>14</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::exitRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilter</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterContext;</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>95</index></indexes><blocks><block>16</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser::lineFilter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilterList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>47</index></indexes><blocks><block>8</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilterList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>50</index></indexes><blocks><block>9</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilterList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilterList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilterList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilterList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;</methodDescription><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>34</index></indexes><blocks><block>5</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilterList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>56</index></indexes><blocks><block>10</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilterList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>66</index></indexes><blocks><block>12</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilterList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>72</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilterList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;</methodDescription><lineNumber>631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>104</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilterList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;</methodDescription><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>111</index></indexes><blocks><block>19</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilterList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;</methodDescription><lineNumber>635</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>115</index><index>85</index><index>125</index></indexes><blocks><block>16</block><block>20</block><block>22</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::exitRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>lineFilterList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;</methodDescription><lineNumber>637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>134</index></indexes><blocks><block>24</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser::lineFilterList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$OperatorContext;</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>40</index></indexes><blocks><block>6</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$OperatorContext;</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>43</index></indexes><blocks><block>7</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$OperatorContext;</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>60</index></indexes><blocks><block>11</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$OperatorContext;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$OperatorContext;</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$OperatorContext;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$OperatorContext;</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>70</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportMatch</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$OperatorContext;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>80</index><index>120</index><index>110</index></indexes><blocks><block>16</block><block>20</block><block>22</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::exitRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$OperatorContext;</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>99</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$OperatorContext;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>106</index></indexes><blocks><block>19</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$OperatorContext;</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>129</index></indexes><blocks><block>24</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser::operator</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>22</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>47</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>52</index></indexes><blocks><block>9</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext;</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>62</index></indexes><blocks><block>11</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext;</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>78</index></indexes><blocks><block>14</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>83</index></indexes><blocks><block>15</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext;</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>93</index></indexes><blocks><block>17</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>103</index></indexes><blocks><block>19</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>133</index></indexes><blocks><block>24</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>140</index></indexes><blocks><block>25</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>144</index><index>114</index><index>153</index></indexes><blocks><block>22</block><block>26</block><block>28</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::exitRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>162</index></indexes><blocks><block>30</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser::root</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>streamSelector</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>57</index></indexes><blocks><block>9</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>streamSelector</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>streamSelector</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>streamSelector</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>streamSelector</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext;</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>39</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>streamSelector</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>45</index></indexes><blocks><block>7</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>streamSelector</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>62</index></indexes><blocks><block>10</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>streamSelector</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>73</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>streamSelector</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>102</index></indexes><blocks><block>17</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>streamSelector</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext;</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>109</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>streamSelector</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>113</index><index>83</index><index>123</index></indexes><blocks><block>15</block><block>19</block><block>21</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::exitRule</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser</mutatedClass><mutatedMethod>streamSelector</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext;</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>132</index></indexes><blocks><block>23</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser::streamSelector</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>badResponse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>5</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/oap/query/logql/handler/LogQLApiHandler::badResponse</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>labelValues</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Long;Ljava/lang/Long;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/oap/query/logql/entity/response/LabelValuesQueryRsp::setStatus</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>labelValues</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Long;Ljava/lang/Long;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>34</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to java/util/Set::forEach</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>labelValues</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/Long;Ljava/lang/Long;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>40</index></indexes><blocks><block>8</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/oap/query/logql/handler/LogQLApiHandler::labelValues</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>labels</mutatedMethod><methodDescription>(Ljava/lang/Long;Ljava/lang/Long;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/oap/query/logql/entity/response/LabelsQueryRsp::setStatus</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>labels</mutatedMethod><methodDescription>(Ljava/lang/Long;Ljava/lang/Long;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>33</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to java/util/Set::forEach</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>labels</mutatedMethod><methodDescription>(Ljava/lang/Long;Ljava/lang/Long;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>39</index></indexes><blocks><block>8</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/oap/query/logql/handler/LogQLApiHandler::labels</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>lambda$rangeQuery$2</mutatedMethod><methodDescription>(Ljava/util/Map$Entry;)Z</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>7</index></indexes><blocks><block>2</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>lambda$rangeQuery$2</mutatedMethod><methodDescription>(Ljava/util/Map$Entry;)Z</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>15</index></indexes><blocks><block>5</block></blocks><killingTest/><description>replaced boolean return with true for org/apache/skywalking/oap/query/logql/handler/LogQLApiHandler::lambda$rangeQuery$2</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>lambda$rangeQuery$3</mutatedMethod><methodDescription>(Ljava/util/Map$Entry;)Lorg/apache/skywalking/oap/server/core/analysis/manual/searchtag/Tag;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>12</index></indexes><blocks><block>3</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/oap/query/logql/handler/LogQLApiHandler::lambda$rangeQuery$3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>lambda$rangeQuery$4</mutatedMethod><methodDescription>(Lorg/apache/skywalking/oap/server/core/query/type/Log;)Ljava/lang/String;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>12</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with &quot;&quot; for org/apache/skywalking/oap/query/logql/handler/LogQLApiHandler::lambda$rangeQuery$4</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>lambda$rangeQuery$5</mutatedMethod><methodDescription>(Lorg/apache/skywalking/oap/query/logql/entity/response/StreamLog;Ljava/lang/String;Ljava/util/List;)V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>65</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/apache/skywalking/oap/query/logql/entity/response/StreamLog$Result::setStream</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>lambda$rangeQuery$5</mutatedMethod><methodDescription>(Lorg/apache/skywalking/oap/query/logql/entity/response/StreamLog;Ljava/lang/String;Ljava/util/List;)V</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>115</index></indexes><blocks><block>32</block></blocks><killingTest/><description>removed call to org/apache/skywalking/oap/query/logql/entity/response/StreamLog$Result::setValues</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>millis2Nano</mutatedMethod><methodDescription>(Ljava/lang/Long;)J</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>Replaced long multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>millis2Nano</mutatedMethod><methodDescription>(Ljava/lang/Long;)J</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced long return with 0 for org/apache/skywalking/oap/query/logql/handler/LogQLApiHandler::millis2Nano</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>nano2Millis</mutatedMethod><methodDescription>(Ljava/lang/Long;)J</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>Replaced long division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>nano2Millis</mutatedMethod><methodDescription>(Ljava/lang/Long;)J</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced long return with 0 for org/apache/skywalking/oap/query/logql/handler/LogQLApiHandler::nano2Millis</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>rangeQuery</mutatedMethod><methodDescription>(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/skywalking/oap/query/logql/entity/LogDirection;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>88</index></indexes><blocks><block>20</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>rangeQuery</mutatedMethod><methodDescription>(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/skywalking/oap/query/logql/entity/LogDirection;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>116</index></indexes><blocks><block>27</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>rangeQuery</mutatedMethod><methodDescription>(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/skywalking/oap/query/logql/entity/LogDirection;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>123</index></indexes><blocks><block>30</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>rangeQuery</mutatedMethod><methodDescription>(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/skywalking/oap/query/logql/entity/LogDirection;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>151</index></indexes><blocks><block>38</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>rangeQuery</mutatedMethod><methodDescription>(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/skywalking/oap/query/logql/entity/LogDirection;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>187</index></indexes><blocks><block>49</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>rangeQuery</mutatedMethod><methodDescription>(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/skywalking/oap/query/logql/entity/LogDirection;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>262</index></indexes><blocks><block>68</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>rangeQuery</mutatedMethod><methodDescription>(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/skywalking/oap/query/logql/entity/LogDirection;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/oap/query/logql/entity/response/LogRangeQueryRsp::setStatus</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>rangeQuery</mutatedMethod><methodDescription>(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/skywalking/oap/query/logql/entity/LogDirection;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>26</index></indexes><blocks><block>5</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLLexer::addErrorListener</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>rangeQuery</mutatedMethod><methodDescription>(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/skywalking/oap/query/logql/entity/LogDirection;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>43</index></indexes><blocks><block>9</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParser::addErrorListener</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>rangeQuery</mutatedMethod><methodDescription>(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/skywalking/oap/query/logql/entity/LogDirection;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>192</index></indexes><blocks><block>50</block></blocks><killingTest/><description>removed call to org/apache/skywalking/oap/server/core/query/input/TraceScopeCondition::setTraceId</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>rangeQuery</mutatedMethod><methodDescription>(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/skywalking/oap/query/logql/entity/LogDirection;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>281</index></indexes><blocks><block>73</block></blocks><killingTest/><description>removed call to org/apache/skywalking/oap/query/logql/entity/response/StreamLog::setResultType</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>rangeQuery</mutatedMethod><methodDescription>(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/skywalking/oap/query/logql/entity/LogDirection;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>286</index></indexes><blocks><block>74</block></blocks><killingTest/><description>removed call to org/apache/skywalking/oap/query/logql/entity/response/LogRangeQueryRsp::setData</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>rangeQuery</mutatedMethod><methodDescription>(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/skywalking/oap/query/logql/entity/LogDirection;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>305</index></indexes><blocks><block>79</block></blocks><killingTest/><description>removed call to java/util/Map::forEach</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>rangeQuery</mutatedMethod><methodDescription>(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/skywalking/oap/query/logql/entity/LogDirection;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>62</index></indexes><blocks><block>14</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/oap/query/logql/handler/LogQLApiHandler::rangeQuery</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>rangeQuery</mutatedMethod><methodDescription>(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/skywalking/oap/query/logql/entity/LogDirection;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>269</index></indexes><blocks><block>71</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/oap/query/logql/handler/LogQLApiHandler::rangeQuery</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>rangeQuery</mutatedMethod><methodDescription>(Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/skywalking/oap/query/logql/entity/LogDirection;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>311</index></indexes><blocks><block>81</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/oap/query/logql/handler/LogQLApiHandler::rangeQuery</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLApiHandler.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.handler.LogQLApiHandler</mutatedClass><mutatedMethod>successResponse</mutatedMethod><methodDescription>(Lorg/apache/skywalking/oap/query/logql/entity/response/QueryResponse;)Lcom/linecorp/armeria/common/HttpResponse;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>19</index></indexes><blocks><block>6</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/oap/query/logql/handler/LogQLApiHandler::successResponse</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLExprVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.rt.LogQLExprVisitor</mutatedClass><mutatedMethod>visitLineFilterList</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;)Lorg/apache/skywalking/oap/query/logql/rt/result/LogQLParseResult;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>35</index></indexes><blocks><block>10</block></blocks><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLExprVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.rt.LogQLExprVisitor</mutatedClass><mutatedMethod>visitLineFilterList</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;)Lorg/apache/skywalking/oap/query/logql/rt/result/LogQLParseResult;</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>42</index></indexes><blocks><block>12</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLExprVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.rt.LogQLExprVisitor</mutatedClass><mutatedMethod>visitLineFilterList</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;)Lorg/apache/skywalking/oap/query/logql/rt/result/LogQLParseResult;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>54</index></indexes><blocks><block>17</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLExprVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.rt.LogQLExprVisitor</mutatedClass><mutatedMethod>visitLineFilterList</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;)Lorg/apache/skywalking/oap/query/logql/rt/result/LogQLParseResult;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>70</index></indexes><blocks><block>24</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLExprVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.rt.LogQLExprVisitor</mutatedClass><mutatedMethod>visitLineFilterList</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;)Lorg/apache/skywalking/oap/query/logql/rt/result/LogQLParseResult;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>86</index></indexes><blocks><block>29</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/oap/query/logql/rt/LogQLExprVisitor::visitLineFilterList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLExprVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.rt.LogQLExprVisitor</mutatedClass><mutatedMethod>visitRoot</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext;)Lorg/apache/skywalking/oap/query/logql/rt/result/LogQLParseResult;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>13</index></indexes><blocks><block>3</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLExprVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.rt.LogQLExprVisitor</mutatedClass><mutatedMethod>visitRoot</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext;)Lorg/apache/skywalking/oap/query/logql/rt/result/LogQLParseResult;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>27</index></indexes><blocks><block>7</block></blocks><killingTest/><description>removed call to org/apache/skywalking/oap/query/logql/rt/result/LogQLParseResult::setKeywordsOfContent</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLExprVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.rt.LogQLExprVisitor</mutatedClass><mutatedMethod>visitRoot</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext;)Lorg/apache/skywalking/oap/query/logql/rt/result/LogQLParseResult;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>33</index></indexes><blocks><block>9</block></blocks><killingTest/><description>removed call to org/apache/skywalking/oap/query/logql/rt/result/LogQLParseResult::setExcludingKeywordsOfContent</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLExprVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.rt.LogQLExprVisitor</mutatedClass><mutatedMethod>visitRoot</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext;)Lorg/apache/skywalking/oap/query/logql/rt/result/LogQLParseResult;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>38</index></indexes><blocks><block>10</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/oap/query/logql/rt/LogQLExprVisitor::visitRoot</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLExprVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.rt.LogQLExprVisitor</mutatedClass><mutatedMethod>visitStreamSelector</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext;)Lorg/apache/skywalking/oap/query/logql/rt/result/LogQLParseResult;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>52</index></indexes><blocks><block>16</block></blocks><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLExprVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.rt.LogQLExprVisitor</mutatedClass><mutatedMethod>visitStreamSelector</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext;)Lorg/apache/skywalking/oap/query/logql/rt/result/LogQLParseResult;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>16</index></indexes><blocks><block>3</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLExprVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.rt.LogQLExprVisitor</mutatedClass><mutatedMethod>visitStreamSelector</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext;)Lorg/apache/skywalking/oap/query/logql/rt/result/LogQLParseResult;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>59</index></indexes><blocks><block>18</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLExprVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.rt.LogQLExprVisitor</mutatedClass><mutatedMethod>visitStreamSelector</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext;)Lorg/apache/skywalking/oap/query/logql/rt/result/LogQLParseResult;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>63</index></indexes><blocks><block>20</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLExprVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.rt.LogQLExprVisitor</mutatedClass><mutatedMethod>visitStreamSelector</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext;)Lorg/apache/skywalking/oap/query/logql/rt/result/LogQLParseResult;</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>82</index></indexes><blocks><block>24</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/oap/query/logql/rt/LogQLExprVisitor::visitStreamSelector</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelListContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelListContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelListContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelListContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelListContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelListContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelListContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::enterLabelList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelListContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelListContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::exitLabelList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelListContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelListContext</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext::label</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelListContext</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelContext;</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext::label</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelContext</mutatedClass><mutatedMethod>EQ</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelContext::EQ</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::enterLabel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::exitLabel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelContext</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelNameContext;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelContext::labelName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelContext</mutatedClass><mutatedMethod>labelValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelValueContext;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelContext::labelValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$StreamSelectorContext</mutatedClass><mutatedMethod>L_BRACE</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext::L_BRACE</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$StreamSelectorContext</mutatedClass><mutatedMethod>R_BRACE</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext::R_BRACE</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$StreamSelectorContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$StreamSelectorContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$StreamSelectorContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$StreamSelectorContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$StreamSelectorContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::enterStreamSelector</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$StreamSelectorContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$StreamSelectorContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::exitStreamSelector</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$StreamSelectorContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$StreamSelectorContext</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext;</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext::labelList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$RootContext</mutatedClass><mutatedMethod>EOF</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext::EOF</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$RootContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$RootContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$RootContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$RootContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$RootContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::enterRoot</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$RootContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$RootContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::exitRoot</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$RootContext</mutatedClass><mutatedMethod>lineFilterList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext::lineFilterList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$RootContext</mutatedClass><mutatedMethod>streamSelector</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext::streamSelector</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParserBaseVisitor</mutatedClass><mutatedMethod>visitFilterValue</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$FilterValueContext;)Ljava/lang/Object;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParserBaseVisitor::visitFilterValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParserBaseVisitor</mutatedClass><mutatedMethod>visitLabel</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelContext;)Ljava/lang/Object;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParserBaseVisitor::visitLabel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParserBaseVisitor</mutatedClass><mutatedMethod>visitLabelList</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelListContext;)Ljava/lang/Object;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParserBaseVisitor::visitLabelList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParserBaseVisitor</mutatedClass><mutatedMethod>visitLabelName</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelNameContext;)Ljava/lang/Object;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParserBaseVisitor::visitLabelName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParserBaseVisitor</mutatedClass><mutatedMethod>visitLabelValue</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LabelValueContext;)Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParserBaseVisitor::visitLabelValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParserBaseVisitor</mutatedClass><mutatedMethod>visitLineFilter</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterContext;)Ljava/lang/Object;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParserBaseVisitor::visitLineFilter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParserBaseVisitor</mutatedClass><mutatedMethod>visitLineFilterList</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext;)Ljava/lang/Object;</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParserBaseVisitor::visitLineFilterList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParserBaseVisitor</mutatedClass><mutatedMethod>visitOperator</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$OperatorContext;)Ljava/lang/Object;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParserBaseVisitor::visitOperator</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParserBaseVisitor</mutatedClass><mutatedMethod>visitRoot</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$RootContext;)Ljava/lang/Object;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParserBaseVisitor::visitRoot</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParserBaseVisitor</mutatedClass><mutatedMethod>visitStreamSelector</mutatedMethod><methodDescription>(Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$StreamSelectorContext;)Ljava/lang/Object;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParserBaseVisitor::visitStreamSelector</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$OperatorContext</mutatedClass><mutatedMethod>CONTAINS</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$OperatorContext::CONTAINS</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$OperatorContext</mutatedClass><mutatedMethod>NOT_CONTAINS</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$OperatorContext::NOT_CONTAINS</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$OperatorContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$OperatorContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$OperatorContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$OperatorContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$OperatorContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$OperatorContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$OperatorContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::enterOperator</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$OperatorContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$OperatorContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::exitOperator</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$OperatorContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/logql/rt/grammar/LogQLParser$OperatorContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::enterLineFilter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::exitLineFilter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterContext</mutatedClass><mutatedMethod>filterValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$FilterValueContext;</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterContext::filterValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterContext</mutatedClass><mutatedMethod>operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$OperatorContext;</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterContext::operator</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterListContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterListContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterListContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterListContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterListContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::enterLineFilterList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterListContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterListContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::exitLineFilterList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterListContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterListContext</mutatedClass><mutatedMethod>lineFilter</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for org/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext::lineFilter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LineFilterListContext</mutatedClass><mutatedMethod>lineFilter</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterContext;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LineFilterListContext::lineFilter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelNameContext</mutatedClass><mutatedMethod>NAME_STRING</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelNameContext::NAME_STRING</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelNameContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelNameContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelNameContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelNameContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelNameContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelNameContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelNameContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::enterLabelName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelNameContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelNameContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::exitLabelName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelNameContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelNameContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$FilterValueContext</mutatedClass><mutatedMethod>VALUE_STRING</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$FilterValueContext::VALUE_STRING</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$FilterValueContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$FilterValueContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$FilterValueContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$FilterValueContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$FilterValueContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$FilterValueContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$FilterValueContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::enterFilterValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$FilterValueContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$FilterValueContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::exitFilterValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$FilterValueContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/logql/rt/grammar/LogQLParser$FilterValueContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelValueContext</mutatedClass><mutatedMethod>VALUE_STRING</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelValueContext::VALUE_STRING</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelValueContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelValueContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelValueContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelValueContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelValueContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelValueContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelValueContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::enterLabelValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelValueContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelValueContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/logql/rt/grammar/LogQLParserListener::exitLabelValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLParser.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLParser$LabelValueContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/logql/rt/grammar/LogQLParser$LabelValueContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLLexer.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLLexer</mutatedClass><mutatedMethod>getATN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/atn/ATN;</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLLexer::getATN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLLexer.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLLexer</mutatedClass><mutatedMethod>getChannelNames</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLLexer::getChannelNames</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLLexer.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLLexer</mutatedClass><mutatedMethod>getGrammarFileName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with &quot;&quot; for org/apache/skywalking/logql/rt/grammar/LogQLLexer::getGrammarFileName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLLexer.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLLexer</mutatedClass><mutatedMethod>getModeNames</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLLexer::getModeNames</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLLexer.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLLexer</mutatedClass><mutatedMethod>getRuleNames</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLLexer::getRuleNames</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLLexer.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLLexer</mutatedClass><mutatedMethod>getSerializedATN</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with &quot;&quot; for org/apache/skywalking/logql/rt/grammar/LogQLLexer::getSerializedATN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLLexer.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLLexer</mutatedClass><mutatedMethod>getTokenNames</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLLexer::getTokenNames</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLLexer.java</sourceFile><mutatedClass>org.apache.skywalking.logql.rt.grammar.LogQLLexer</mutatedClass><mutatedMethod>getVocabulary</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/Vocabulary;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/logql/rt/grammar/LogQLLexer::getVocabulary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLProvider.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.LogQLProvider</mutatedClass><mutatedMethod>module</mutatedMethod><methodDescription>()Ljava/lang/Class;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/oap/query/logql/LogQLProvider::module</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLProvider.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.LogQLProvider</mutatedClass><mutatedMethod>name</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with &quot;&quot; for org/apache/skywalking/oap/query/logql/LogQLProvider::name</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLProvider.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.LogQLProvider</mutatedClass><mutatedMethod>newConfigCreator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/oap/server/library/module/ModuleProvider$ConfigCreator;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/oap/query/logql/LogQLProvider::newConfigCreator</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLProvider.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.LogQLProvider</mutatedClass><mutatedMethod>notifyAfterCompleted</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>4</index></indexes><blocks><block>1</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLProvider.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.LogQLProvider</mutatedClass><mutatedMethod>notifyAfterCompleted</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to org/apache/skywalking/oap/server/library/server/http/HTTPServer::start</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLProvider.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.LogQLProvider</mutatedClass><mutatedMethod>requiredModules</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>9</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/oap/query/logql/LogQLProvider::requiredModules</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLProvider.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.LogQLProvider</mutatedClass><mutatedMethod>start</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>56</index></indexes><blocks><block>15</block></blocks><killingTest/><description>removed call to org/apache/skywalking/oap/server/library/server/http/HTTPServer::initialize</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLProvider.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.LogQLProvider</mutatedClass><mutatedMethod>start</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>83</index></indexes><blocks><block>19</block></blocks><killingTest/><description>removed call to org/apache/skywalking/oap/server/library/server/http/HTTPServer::addHandler</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TimeValuePairSerializer.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.entity.codec.TimeValuePairSerializer</mutatedClass><mutatedMethod>serialize</mutatedMethod><methodDescription>(Lorg/apache/skywalking/oap/query/logql/entity/response/TimeValuePair;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>13</index></indexes><blocks><block>2</block></blocks><killingTest/><description>removed call to com/fasterxml/jackson/core/JsonGenerator::writeStartArray</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TimeValuePairSerializer.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.entity.codec.TimeValuePairSerializer</mutatedClass><mutatedMethod>serialize</mutatedMethod><methodDescription>(Lorg/apache/skywalking/oap/query/logql/entity/response/TimeValuePair;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>19</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to com/fasterxml/jackson/core/JsonGenerator::writeString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TimeValuePairSerializer.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.entity.codec.TimeValuePairSerializer</mutatedClass><mutatedMethod>serialize</mutatedMethod><methodDescription>(Lorg/apache/skywalking/oap/query/logql/entity/response/TimeValuePair;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>25</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to com/fasterxml/jackson/core/JsonGenerator::writeString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TimeValuePairSerializer.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.entity.codec.TimeValuePairSerializer</mutatedClass><mutatedMethod>serialize</mutatedMethod><methodDescription>(Lorg/apache/skywalking/oap/query/logql/entity/response/TimeValuePair;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>29</index></indexes><blocks><block>7</block></blocks><killingTest/><description>removed call to com/fasterxml/jackson/core/JsonGenerator::writeEndArray</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LabelName.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.entity.LabelName</mutatedClass><mutatedMethod>containsLabel</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced boolean return with false for org/apache/skywalking/oap/query/logql/entity/LabelName::containsLabel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LabelName.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.entity.LabelName</mutatedClass><mutatedMethod>containsLabel</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced boolean return with true for org/apache/skywalking/oap/query/logql/entity/LabelName::containsLabel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LabelName.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.entity.LabelName</mutatedClass><mutatedMethod>getLabel</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with &quot;&quot; for org/apache/skywalking/oap/query/logql/entity/LabelName::getLabel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LabelName.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.entity.LabelName</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with &quot;&quot; for org/apache/skywalking/oap/query/logql/entity/LabelName::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ResultType.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.entity.response.ResultType</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with &quot;&quot; for org/apache/skywalking/oap/query/logql/entity/response/ResultType::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ResultType.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.entity.response.ResultType</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with &quot;&quot; for org/apache/skywalking/oap/query/logql/entity/response/ResultType::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ResultStatus.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.entity.ResultStatus</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with &quot;&quot; for org/apache/skywalking/oap/query/logql/entity/ResultStatus::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ResultStatus.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.entity.ResultStatus</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with &quot;&quot; for org/apache/skywalking/oap/query/logql/entity/ResultStatus::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLProvider.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.LogQLProvider$1</mutatedClass><mutatedMethod>type</mutatedMethod><methodDescription>()Ljava/lang/Class;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/oap/query/logql/LogQLProvider$1::type</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogQLModule.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.LogQLModule</mutatedClass><mutatedMethod>services</mutatedMethod><methodDescription>()[Ljava/lang/Class;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/oap/query/logql/LogQLModule::services</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LogDirection.java</sourceFile><mutatedClass>org.apache.skywalking.oap.query.logql.entity.LogDirection</mutatedClass><mutatedMethod>getOrder</mutatedMethod><methodDescription>()Lorg/apache/skywalking/oap/server/core/query/enumeration/Order;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/oap/query/logql/entity/LogDirection::getOrder</description></mutation>
</mutations>
