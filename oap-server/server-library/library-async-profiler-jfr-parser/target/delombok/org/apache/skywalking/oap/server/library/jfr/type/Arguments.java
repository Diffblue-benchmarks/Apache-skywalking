// Generated by delombok at Fri May 16 09:36:48 BST 2025
/*
 * Copyright The async-profiler authors
 * SPDX-License-Identifier: Apache-2.0
 */
package org.apache.skywalking.oap.server.library.jfr.type;

public class Arguments {
    private boolean threads;
    private boolean classify;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public Arguments() {
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isThreads() {
        return this.threads;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean isClassify() {
        return this.classify;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setThreads(final boolean threads) {
        this.threads = threads;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setClassify(final boolean classify) {
        this.classify = classify;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Arguments)) return false;
        final Arguments other = (Arguments) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        if (this.isThreads() != other.isThreads()) return false;
        if (this.isClassify() != other.isClassify()) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof Arguments;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + (this.isThreads() ? 79 : 97);
        result = result * PRIME + (this.isClassify() ? 79 : 97);
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public java.lang.String toString() {
        return "Arguments(threads=" + this.isThreads() + ", classify=" + this.isClassify() + ")";
    }
}
