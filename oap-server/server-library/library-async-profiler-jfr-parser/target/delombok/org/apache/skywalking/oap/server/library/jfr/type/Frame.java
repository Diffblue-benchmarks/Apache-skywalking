// Generated by delombok at Fri May 16 09:36:48 BST 2025
/*
 * Copyright The async-profiler authors
 * SPDX-License-Identifier: Apache-2.0
 */
package org.apache.skywalking.oap.server.library.jfr.type;

import java.util.HashMap;

public class Frame extends HashMap<Integer, Frame> {
    public static final byte TYPE_INTERPRETED = 0;
    public static final byte TYPE_JIT_COMPILED = 1;
    public static final byte TYPE_INLINED = 2;
    public static final byte TYPE_NATIVE = 3;
    public static final byte TYPE_CPP = 4;
    public static final byte TYPE_KERNEL = 5;
    public static final byte TYPE_C1_COMPILED = 6;
    private static final int TYPE_SHIFT = 28;
    final int key;
    long total;
    long self;
    long inlined;
    long c1;
    long interpreted;

    private Frame(int key) {
        this.key = key;
    }

    public Frame(int titleIndex, byte type) {
        this(titleIndex | type << TYPE_SHIFT);
    }

    public Frame getChild(int titleIndex, byte type) {
        return super.computeIfAbsent(titleIndex | type << TYPE_SHIFT, Frame::new);
    }

    public int getTitleIndex() {
        return key & ((1 << TYPE_SHIFT) - 1);
    }

    public byte getType() {
        if (inlined * 3 >= total) {
            return TYPE_INLINED;
        } else if (c1 * 2 >= total) {
            return TYPE_C1_COMPILED;
        } else if (interpreted * 2 >= total) {
            return TYPE_INTERPRETED;
        } else {
            return (byte) (key >>> TYPE_SHIFT);
        }
    }

    public int depth(long cutoff) {
        int depth = 0;
        if (size() > 0) {
            for (Frame child : values()) {
                if (child.total >= cutoff) {
                    depth = Math.max(depth, child.depth(cutoff));
                }
            }
        }
        return depth + 1;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public int getKey() {
        return this.key;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getTotal() {
        return this.total;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getSelf() {
        return this.self;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getInlined() {
        return this.inlined;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getC1() {
        return this.c1;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public long getInterpreted() {
        return this.interpreted;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setTotal(final long total) {
        this.total = total;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setSelf(final long self) {
        this.self = self;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setInlined(final long inlined) {
        this.inlined = inlined;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setC1(final long c1) {
        this.c1 = c1;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public void setInterpreted(final long interpreted) {
        this.interpreted = interpreted;
    }
}
