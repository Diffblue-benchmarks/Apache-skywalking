<?xml version="1.0" encoding="UTF-8"?>
<mutations partial="true">
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>addSub</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubContext;</methodDescription><lineNumber>1220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>40</index></indexes><blocks><block>6</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAddSub_thenStopReturnCommonToken()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>addSub</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubContext;</methodDescription><lineNumber>1220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>43</index></indexes><blocks><block>7</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAddSub_thenStopReturnCommonToken()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>addSub</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubContext;</methodDescription><lineNumber>1224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>60</index></indexes><blocks><block>11</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>addSub</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubContext;</methodDescription><lineNumber>1213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAddSub_givenANTLRInputStreamWithInputIsEmptyString_thenReturnStartTextIsEof()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>addSub</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubContext;</methodDescription><lineNumber>1216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>addSub</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubContext;</methodDescription><lineNumber>1218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>addSub</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubContext;</methodDescription><lineNumber>1225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>70</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportMatch</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>addSub</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubContext;</methodDescription><lineNumber>1236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>80</index><index>120</index><index>110</index></indexes><blocks><block>16</block><block>20</block><block>22</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAddSub_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>addSub</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubContext;</methodDescription><lineNumber>1232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>99</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>addSub</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubContext;</methodDescription><lineNumber>1233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>106</index></indexes><blocks><block>19</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAddSub_thenStopReturnCommonToken()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>addSub</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubContext;</methodDescription><lineNumber>1238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>129</index></indexes><blocks><block>24</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAddSub_givenANTLRInputStreamWithInputIsEmptyString_thenReturnStartTextIsEof()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::addSub</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabels</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsContext;</methodDescription><lineNumber>2513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregateLabels_thenStartInputStreamReturnANTLRInputStream()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabels</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsContext;</methodDescription><lineNumber>2515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabels</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsContext;</methodDescription><lineNumber>2517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregateLabels_thenReturnChildrenSizeIsOne()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabels</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsContext;</methodDescription><lineNumber>2523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>57</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabels</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsContext;</methodDescription><lineNumber>2524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>64</index></indexes><blocks><block>9</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregateLabels_thenReturnToStringTreeIs42()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabels</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsContext;</methodDescription><lineNumber>2527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>68</index><index>38</index><index>77</index></indexes><blocks><block>6</block><block>10</block><block>12</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregateLabels_thenReturnToStringTreeIs42()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabels</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsContext;</methodDescription><lineNumber>2529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>86</index></indexes><blocks><block>14</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregateLabels_thenStartInputStreamReturnANTLRInputStream()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::aggregateLabels</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFunc</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext;</methodDescription><lineNumber>2573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>56</index></indexes><blocks><block>9</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFunc</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext;</methodDescription><lineNumber>2563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregateLabelsFunc_thenReturnToStringTreeIs297A8a8a8a8()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFunc</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext;</methodDescription><lineNumber>2566</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFunc</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext;</methodDescription><lineNumber>2568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregateLabelsFunc_thenReturnToStringTreeIs297A8a8a8a8()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFunc</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext;</methodDescription><lineNumber>2570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>38</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFunc</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext;</methodDescription><lineNumber>2571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>44</index></indexes><blocks><block>7</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFunc</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext;</methodDescription><lineNumber>2575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>61</index></indexes><blocks><block>10</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFunc</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext;</methodDescription><lineNumber>2577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>72</index></indexes><blocks><block>12</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFunc</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext;</methodDescription><lineNumber>2579</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>82</index></indexes><blocks><block>14</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFunc</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext;</methodDescription><lineNumber>2588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>112</index></indexes><blocks><block>19</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFunc</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext;</methodDescription><lineNumber>2589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>119</index></indexes><blocks><block>20</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFunc</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext;</methodDescription><lineNumber>2592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>133</index><index>123</index><index>93</index></indexes><blocks><block>17</block><block>21</block><block>23</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregateLabelsFunc_thenReturnToStringTreeIs297A8a8a8a8()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFunc</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext;</methodDescription><lineNumber>2594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>142</index></indexes><blocks><block>25</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregateLabelsFunc_thenReturnToStringTreeIs297A8a8a8a8()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::aggregateLabelsFunc</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFuncName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext;</methodDescription><lineNumber>2631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>40</index></indexes><blocks><block>6</block></blocks><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFuncName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext;</methodDescription><lineNumber>2631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>44</index></indexes><blocks><block>7</block></blocks><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFuncName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext;</methodDescription><lineNumber>2631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>46</index></indexes><blocks><block>7</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregateLabelsFuncName_thenStopReturnCommonToken()]</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFuncName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext;</methodDescription><lineNumber>2631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>41</index></indexes><blocks><block>6</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFuncName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext;</methodDescription><lineNumber>2631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>49</index></indexes><blocks><block>7</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregateLabelsFuncName_thenStopReturnCommonToken()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFuncName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext;</methodDescription><lineNumber>2635</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>67</index></indexes><blocks><block>11</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFuncName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext;</methodDescription><lineNumber>2624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregateLabelsFuncName_thenReturnStartTextIsEof2()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFuncName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext;</methodDescription><lineNumber>2627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFuncName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext;</methodDescription><lineNumber>2629</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFuncName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext;</methodDescription><lineNumber>2636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>77</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportMatch</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFuncName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext;</methodDescription><lineNumber>2643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>106</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFuncName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext;</methodDescription><lineNumber>2644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>113</index></indexes><blocks><block>19</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregateLabelsFuncName_thenStopReturnCommonToken()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFuncName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext;</methodDescription><lineNumber>2647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>117</index><index>87</index><index>127</index></indexes><blocks><block>16</block><block>20</block><block>22</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregateLabelsFuncName_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregateLabelsFuncName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext;</methodDescription><lineNumber>2649</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>136</index></indexes><blocks><block>24</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregateLabelsFuncName_thenReturnStartTextIsEof2()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::aggregateLabelsFuncName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1898</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregation_thenReturnTextIsEmptyString()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>22</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1901</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>42</index></indexes><blocks><block>7</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>47</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1911</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>63</index></indexes><blocks><block>11</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>68</index></indexes><blocks><block>12</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1918</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>84</index></indexes><blocks><block>15</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1920</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>89</index></indexes><blocks><block>16</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1925</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>105</index></indexes><blocks><block>19</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>110</index></indexes><blocks><block>20</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>126</index></indexes><blocks><block>23</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>131</index></indexes><blocks><block>24</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1939</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>147</index></indexes><blocks><block>27</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1941</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>152</index></indexes><blocks><block>28</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>168</index></indexes><blocks><block>31</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1956</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>203</index></indexes><blocks><block>37</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1957</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>210</index></indexes><blocks><block>38</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregation_thenStopReturnCommonToken()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>214</index><index>184</index><index>223</index></indexes><blocks><block>35</block><block>39</block><block>41</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregation_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>1962</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>232</index></indexes><blocks><block>43</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregation_thenReturnTextIsEmptyString()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::aggregation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attribute</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext;</methodDescription><lineNumber>2833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>50</index></indexes><blocks><block>8</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAttribute_thenReturnTextIsEmptyString()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attribute</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext;</methodDescription><lineNumber>2833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>53</index></indexes><blocks><block>9</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAttribute_thenReturnTextIsEmptyString()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attribute</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext;</methodDescription><lineNumber>2837</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>70</index></indexes><blocks><block>13</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attribute</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext;</methodDescription><lineNumber>2824</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAttribute_thenReturnTextIsEmptyString()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attribute</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext;</methodDescription><lineNumber>2827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attribute</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext;</methodDescription><lineNumber>2829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAttribute_thenReturnTextIsEmptyString()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attribute</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext;</methodDescription><lineNumber>2831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>38</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attribute</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext;</methodDescription><lineNumber>2838</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>80</index></indexes><blocks><block>15</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportMatch</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attribute</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext;</methodDescription><lineNumber>2841</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>91</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attribute</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext;</methodDescription><lineNumber>2847</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>120</index></indexes><blocks><block>22</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attribute</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext;</methodDescription><lineNumber>2848</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>127</index></indexes><blocks><block>23</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attribute</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext;</methodDescription><lineNumber>2851</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>131</index><index>101</index><index>141</index></indexes><blocks><block>20</block><block>24</block><block>26</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAttribute_thenReturnToStringTreeIs312Abababab()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attribute</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext;</methodDescription><lineNumber>2853</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>150</index></indexes><blocks><block>28</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAttribute_thenReturnTextIsEmptyString()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::attribute</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext;</methodDescription><lineNumber>2899</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>57</index></indexes><blocks><block>10</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext;</methodDescription><lineNumber>2889</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAttributeList_thenReturnToStringTreeIs31631231642()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext;</methodDescription><lineNumber>2892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext;</methodDescription><lineNumber>2894</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAttributeList_thenReturnToStringTreeIs31631231642()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext;</methodDescription><lineNumber>2896</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>38</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext;</methodDescription><lineNumber>2897</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>44</index></indexes><blocks><block>7</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext;</methodDescription><lineNumber>2902</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>62</index></indexes><blocks><block>11</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext;</methodDescription><lineNumber>2904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>73</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext;</methodDescription><lineNumber>2908</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>83</index></indexes><blocks><block>15</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext;</methodDescription><lineNumber>2909</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>89</index></indexes><blocks><block>16</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext;</methodDescription><lineNumber>2916</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>121</index></indexes><blocks><block>21</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext;</methodDescription><lineNumber>2917</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>128</index></indexes><blocks><block>22</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext;</methodDescription><lineNumber>2920</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>132</index><index>102</index><index>142</index></indexes><blocks><block>19</block><block>23</block><block>25</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAttributeList_thenReturnToStringTreeIs31631231642()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext;</methodDescription><lineNumber>2922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>151</index></indexes><blocks><block>27</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAttributeList_thenReturnToStringTreeIs31631231642()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::attributeList</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext;</methodDescription><lineNumber>2774</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>40</index></indexes><blocks><block>6</block></blocks><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext;</methodDescription><lineNumber>2774</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>44</index></indexes><blocks><block>7</block></blocks><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext;</methodDescription><lineNumber>2774</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>46</index></indexes><blocks><block>7</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAttributeName_thenStopReturnCommonToken()]</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext;</methodDescription><lineNumber>2774</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>41</index></indexes><blocks><block>6</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext;</methodDescription><lineNumber>2774</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>49</index></indexes><blocks><block>7</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAttributeName_thenStopReturnCommonToken()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext;</methodDescription><lineNumber>2778</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>67</index></indexes><blocks><block>11</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext;</methodDescription><lineNumber>2767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAttributeName_thenReturnStartTextIsEof2()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext;</methodDescription><lineNumber>2770</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext;</methodDescription><lineNumber>2772</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext;</methodDescription><lineNumber>2779</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>77</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportMatch</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext;</methodDescription><lineNumber>2786</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>106</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext;</methodDescription><lineNumber>2787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>113</index></indexes><blocks><block>19</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAttributeName_thenStopReturnCommonToken()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext;</methodDescription><lineNumber>2790</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>117</index><index>87</index><index>127</index></indexes><blocks><block>16</block><block>20</block><block>22</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAttributeName_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>attributeName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext;</methodDescription><lineNumber>2792</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>136</index></indexes><blocks><block>24</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAttributeName_thenReturnStartTextIsEof2()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::attributeName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineContext;</methodDescription><lineNumber>2949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testBaseline_thenStartInputStreamReturnANTLRInputStream()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineContext;</methodDescription><lineNumber>2951</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineContext;</methodDescription><lineNumber>2953</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testBaseline_thenReturnChildrenSizeIsOne()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineContext;</methodDescription><lineNumber>2959</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>57</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineContext;</methodDescription><lineNumber>2960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>64</index></indexes><blocks><block>9</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testBaseline_thenReturnToStringTreeIsAfafafaf()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineContext;</methodDescription><lineNumber>2963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>68</index><index>38</index><index>77</index></indexes><blocks><block>6</block><block>10</block><block>12</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testBaseline_thenReturnToStringTreeIsAfafafaf()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineContext;</methodDescription><lineNumber>2965</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>86</index></indexes><blocks><block>14</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testBaseline_thenStartInputStreamReturnANTLRInputStream()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::baseline</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline_type</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext;</methodDescription><lineNumber>3001</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>40</index></indexes><blocks><block>6</block></blocks><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline_type</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext;</methodDescription><lineNumber>3001</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>44</index></indexes><blocks><block>7</block></blocks><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline_type</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext;</methodDescription><lineNumber>3001</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>46</index></indexes><blocks><block>7</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testBaseline_type_givenANTLRInputStreamWithInputIs42_thenReturnToStringTreeIs42()]</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline_type</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext;</methodDescription><lineNumber>3001</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>41</index></indexes><blocks><block>6</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline_type</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext;</methodDescription><lineNumber>3001</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>49</index></indexes><blocks><block>7</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testBaseline_type_givenANTLRInputStreamWithInputIs42_thenReturnToStringTreeIs42()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline_type</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext;</methodDescription><lineNumber>3005</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>67</index></indexes><blocks><block>11</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline_type</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext;</methodDescription><lineNumber>2994</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testBaseline_type_thenReturnStartTextIsEof()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline_type</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext;</methodDescription><lineNumber>2997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline_type</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext;</methodDescription><lineNumber>2999</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline_type</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext;</methodDescription><lineNumber>3006</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>77</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportMatch</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline_type</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext;</methodDescription><lineNumber>3013</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>106</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline_type</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext;</methodDescription><lineNumber>3014</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>113</index></indexes><blocks><block>19</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testBaseline_type_givenANTLRInputStreamWithInputIs42_thenReturnToStringTreeIs42()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline_type</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext;</methodDescription><lineNumber>3017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>117</index><index>87</index><index>127</index></indexes><blocks><block>16</block><block>20</block><block>22</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testBaseline_type_givenANTLRInputStreamWithInputIs42_thenReturnToStringTreeIs42()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>baseline_type</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext;</methodDescription><lineNumber>3019</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>136</index></indexes><blocks><block>24</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testBaseline_type_thenReturnStartTextIsEof()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::baseline_type</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>bool_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Bool_operatorContext;</methodDescription><lineNumber>2329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>40</index></indexes><blocks><block>6</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testBool_operator_thenStopReturnCommonToken()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>bool_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Bool_operatorContext;</methodDescription><lineNumber>2329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>43</index></indexes><blocks><block>7</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testBool_operator_thenStopReturnCommonToken()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>bool_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Bool_operatorContext;</methodDescription><lineNumber>2333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>60</index></indexes><blocks><block>11</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>bool_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Bool_operatorContext;</methodDescription><lineNumber>2322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testBool_operator_thenReturnStartTextIsEof2()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>bool_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Bool_operatorContext;</methodDescription><lineNumber>2325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>bool_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Bool_operatorContext;</methodDescription><lineNumber>2327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>bool_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Bool_operatorContext;</methodDescription><lineNumber>2334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>70</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportMatch</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>bool_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Bool_operatorContext;</methodDescription><lineNumber>2345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>80</index><index>120</index><index>110</index></indexes><blocks><block>16</block><block>20</block><block>22</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testBool_operator_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>bool_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Bool_operatorContext;</methodDescription><lineNumber>2341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>99</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>bool_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Bool_operatorContext;</methodDescription><lineNumber>2342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>106</index></indexes><blocks><block>19</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testBool_operator_thenStopReturnCommonToken()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>bool_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Bool_operatorContext;</methodDescription><lineNumber>2347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>129</index></indexes><blocks><block>24</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testBool_operator_thenReturnStartTextIsEof2()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::bool_operator</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;</methodDescription><lineNumber>1332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>40</index></indexes><blocks><block>6</block></blocks><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;</methodDescription><lineNumber>1332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>44</index></indexes><blocks><block>7</block></blocks><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;</methodDescription><lineNumber>1332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>46</index></indexes><blocks><block>7</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testCompare_thenStopReturnCommonToken()]</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;</methodDescription><lineNumber>1332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>41</index></indexes><blocks><block>6</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;</methodDescription><lineNumber>1332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>49</index></indexes><blocks><block>7</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testCompare_thenStopReturnCommonToken()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;</methodDescription><lineNumber>1336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>67</index></indexes><blocks><block>11</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;</methodDescription><lineNumber>1343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>106</index></indexes><blocks><block>19</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;</methodDescription><lineNumber>1325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testCompare_givenListTokenSourceWithTokensIsArrayList_thenReturnStartTextIsEof()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;</methodDescription><lineNumber>1328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;</methodDescription><lineNumber>1330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;</methodDescription><lineNumber>1337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>77</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportMatch</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;</methodDescription><lineNumber>1340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>88</index></indexes><blocks><block>16</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;</methodDescription><lineNumber>1341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>94</index></indexes><blocks><block>17</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;</methodDescription><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>111</index></indexes><blocks><block>20</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;</methodDescription><lineNumber>1354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>141</index></indexes><blocks><block>25</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;</methodDescription><lineNumber>1355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>148</index></indexes><blocks><block>26</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testCompare_thenStopReturnCommonToken()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;</methodDescription><lineNumber>1358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>162</index><index>152</index><index>122</index></indexes><blocks><block>23</block><block>27</block><block>29</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testCompare_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;</methodDescription><lineNumber>1360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>171</index></indexes><blocks><block>31</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testCompare_givenListTokenSourceWithTokensIsArrayList_thenReturnStartTextIsEof()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::compare</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>686</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpression_thenExceptionReturnInputMismatchException()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::expression</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>832</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>610</index></indexes><blocks><block>95</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>832</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>612</index></indexes><blocks><block>96</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>617</index></indexes><blocks><block>97</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>1265</index></indexes><blocks><block>213</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>1267</index></indexes><blocks><block>214</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>980</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>1272</index></indexes><blocks><block>215</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>981</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>1277</index></indexes><blocks><block>216</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>1339</index></indexes><blocks><block>228</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1004</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>1402</index></indexes><blocks><block>241</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1016</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>1465</index></indexes><blocks><block>254</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1028</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>1528</index></indexes><blocks><block>267</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>35</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpression_thenExceptionReturnInputMismatchException()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRecursionRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>698</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>41</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>46</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpression_thenExceptionReturnInputMismatchException()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>52</index></indexes><blocks><block>5</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpression_thenExceptionReturnInputMismatchException()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>86</index></indexes><blocks><block>10</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpression_thenReturnToStringTreeIs782047842()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>116</index></indexes><blocks><block>14</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>127</index></indexes><blocks><block>16</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>722</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>138</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>169</index></indexes><blocks><block>22</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>179</index></indexes><blocks><block>24</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>190</index></indexes><blocks><block>26</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>737</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>201</index></indexes><blocks><block>28</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>232</index></indexes><blocks><block>32</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>242</index></indexes><blocks><block>34</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>253</index></indexes><blocks><block>36</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>264</index></indexes><blocks><block>38</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>295</index></indexes><blocks><block>42</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>305</index></indexes><blocks><block>44</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>316</index></indexes><blocks><block>46</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>327</index></indexes><blocks><block>48</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>769</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>338</index></indexes><blocks><block>50</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>771</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>348</index></indexes><blocks><block>52</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>379</index></indexes><blocks><block>56</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>389</index></indexes><blocks><block>58</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>784</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>400</index></indexes><blocks><block>60</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>786</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>410</index></indexes><blocks><block>62</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>788</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>421</index></indexes><blocks><block>64</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>790</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>432</index></indexes><blocks><block>66</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>799</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>463</index></indexes><blocks><block>70</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>473</index></indexes><blocks><block>72</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>484</index></indexes><blocks><block>74</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>805</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>494</index></indexes><blocks><block>76</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>814</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>525</index></indexes><blocks><block>80</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>555</index></indexes><blocks><block>84</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>565</index></indexes><blocks><block>86</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>576</index></indexes><blocks><block>88</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>586</index></indexes><blocks><block>90</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>592</index></indexes><blocks><block>91</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>622</index></indexes><blocks><block>98</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>838</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>633</index></indexes><blocks><block>100</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>843</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>644</index></indexes><blocks><block>103</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>844</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>650</index></indexes><blocks><block>104</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>847</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>669</index></indexes><blocks><block>108</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>680</index></indexes><blocks><block>110</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>851</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>691</index></indexes><blocks><block>112</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>853</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>702</index></indexes><blocks><block>114</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>712</index></indexes><blocks><block>116</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>864</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>743</index></indexes><blocks><block>120</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>753</index></indexes><blocks><block>122</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>868</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>764</index></indexes><blocks><block>124</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>870</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>775</index></indexes><blocks><block>126</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>872</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>786</index></indexes><blocks><block>128</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>796</index></indexes><blocks><block>130</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>876</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>807</index></indexes><blocks><block>132</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>817</index></indexes><blocks><block>134</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>848</index></indexes><blocks><block>138</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>889</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>858</index></indexes><blocks><block>140</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>891</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>869</index></indexes><blocks><block>142</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>880</index></indexes><blocks><block>144</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>891</index></indexes><blocks><block>146</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>897</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>901</index></indexes><blocks><block>148</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>932</index></indexes><blocks><block>152</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>908</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>942</index></indexes><blocks><block>154</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>953</index></indexes><blocks><block>156</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>912</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>964</index></indexes><blocks><block>158</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>970</index></indexes><blocks><block>159</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>917</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>988</index></indexes><blocks><block>163</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>999</index></indexes><blocks><block>165</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>924</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1011</index></indexes><blocks><block>168</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1022</index></indexes><blocks><block>170</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1032</index></indexes><blocks><block>172</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>937</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1063</index></indexes><blocks><block>176</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>939</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1073</index></indexes><blocks><block>178</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>941</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1084</index></indexes><blocks><block>180</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1095</index></indexes><blocks><block>182</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>945</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1106</index></indexes><blocks><block>184</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1116</index></indexes><blocks><block>186</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1127</index></indexes><blocks><block>188</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>951</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1137</index></indexes><blocks><block>190</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1168</index></indexes><blocks><block>194</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>962</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1178</index></indexes><blocks><block>196</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1189</index></indexes><blocks><block>198</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>966</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1199</index></indexes><blocks><block>200</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>968</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1210</index></indexes><blocks><block>202</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1220</index></indexes><blocks><block>204</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1241</index></indexes><blocks><block>208</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1247</index></indexes><blocks><block>209</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>981</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1279</index></indexes><blocks><block>217</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::triggerExitRuleEvent</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>984</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1289</index></indexes><blocks><block>218</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1295</index></indexes><blocks><block>219</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>990</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1326</index></indexes><blocks><block>225</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::pushNewRecursionContext</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>991</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1331</index></indexes><blocks><block>226</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1351</index></indexes><blocks><block>231</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1361</index></indexes><blocks><block>233</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1002</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1389</index></indexes><blocks><block>238</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::pushNewRecursionContext</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1394</index></indexes><blocks><block>239</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1005</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1414</index></indexes><blocks><block>244</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1424</index></indexes><blocks><block>246</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1014</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1452</index></indexes><blocks><block>251</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::pushNewRecursionContext</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1015</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1457</index></indexes><blocks><block>252</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1477</index></indexes><blocks><block>257</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1019</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1487</index></indexes><blocks><block>259</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1026</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1515</index></indexes><blocks><block>264</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::pushNewRecursionContext</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1027</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1520</index></indexes><blocks><block>265</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1029</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1540</index></indexes><blocks><block>270</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1031</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1550</index></indexes><blocks><block>272</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1038</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1562</index></indexes><blocks><block>275</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1568</index></indexes><blocks><block>276</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1046</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1606</index></indexes><blocks><block>282</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1613</index></indexes><blocks><block>283</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1050</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>1618</index><index>1587</index><index>1629</index></indexes><blocks><block>280</block><block>284</block><block>286</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testRoot_thenReturnToStringTreeIs74Eof()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::unrollRecursionContexts</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1052</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>1638</index></indexes><blocks><block>288</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpression_thenExceptionReturnInputMismatchException()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::expression</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext;</methodDescription><lineNumber>1098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>58</index></indexes><blocks><block>10</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpressionList_givenA_thenReturnToStringTreeIs195781952037819521720378195A()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext;</methodDescription><lineNumber>1088</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpressionList_thenReturnTextIsEmptyString()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext;</methodDescription><lineNumber>1091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext;</methodDescription><lineNumber>1093</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpressionList_thenReturnTextIsEmptyString()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext;</methodDescription><lineNumber>1095</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>39</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext;</methodDescription><lineNumber>1096</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>45</index></indexes><blocks><block>7</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext;</methodDescription><lineNumber>1101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>63</index></indexes><blocks><block>11</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext;</methodDescription><lineNumber>1103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>74</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext;</methodDescription><lineNumber>1107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>85</index></indexes><blocks><block>15</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext;</methodDescription><lineNumber>1108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>91</index></indexes><blocks><block>16</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext;</methodDescription><lineNumber>1115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>123</index></indexes><blocks><block>21</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext;</methodDescription><lineNumber>1116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>130</index></indexes><blocks><block>22</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>144</index><index>134</index><index>104</index></indexes><blocks><block>19</block><block>23</block><block>25</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpressionList_thenReturnToStringTreeIs195781952047819542()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext;</methodDescription><lineNumber>1121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>153</index></indexes><blocks><block>27</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpressionList_thenReturnTextIsEmptyString()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::expressionList</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionNode</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionNodeContext;</methodDescription><lineNumber>1153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpressionNode_thenExceptionReturnInputMismatchException()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionNode</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionNodeContext;</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>22</index></indexes><blocks><block>3</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpressionNode_thenExceptionReturnInputMismatchException()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionNode</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionNodeContext;</methodDescription><lineNumber>1156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpressionNode_thenExceptionReturnInputMismatchException()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionNode</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionNodeContext;</methodDescription><lineNumber>1159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>42</index></indexes><blocks><block>7</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionNode</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionNodeContext;</methodDescription><lineNumber>1161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>47</index></indexes><blocks><block>8</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpressionNode_givenA_thenReturnMetricToStringTreeIs203217203A()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionNode</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionNodeContext;</methodDescription><lineNumber>1167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>62</index></indexes><blocks><block>11</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionNode</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionNodeContext;</methodDescription><lineNumber>1169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>67</index></indexes><blocks><block>12</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpressionNode_thenReturnToStringTreeIs20442()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionNode</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionNodeContext;</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>107</index></indexes><blocks><block>19</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionNode</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionNodeContext;</methodDescription><lineNumber>1180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>114</index></indexes><blocks><block>20</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionNode</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionNodeContext;</methodDescription><lineNumber>1183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>118</index><index>88</index><index>127</index></indexes><blocks><block>17</block><block>21</block><block>23</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpressionNode_givenA_thenReturnMetricToStringTreeIs203217203A()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expressionNode</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionNodeContext;</methodDescription><lineNumber>1185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>136</index></indexes><blocks><block>25</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpressionNode_thenExceptionReturnInputMismatchException()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::expressionNode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression_sempred</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;I)Z</methodDescription><lineNumber>3032</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>13</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testSempred_whenZero()]</killingTest><description>replaced boolean return with false for org/apache/skywalking/mqe/rt/grammar/MQEParser::expression_sempred</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression_sempred</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;I)Z</methodDescription><lineNumber>3034</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>22</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testSempred_whenOne()]</killingTest><description>replaced boolean return with false for org/apache/skywalking/mqe/rt/grammar/MQEParser::expression_sempred</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression_sempred</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;I)Z</methodDescription><lineNumber>3036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>31</index></indexes><blocks><block>6</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testSempred_whenTwo()]</killingTest><description>replaced boolean return with false for org/apache/skywalking/mqe/rt/grammar/MQEParser::expression_sempred</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression_sempred</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;I)Z</methodDescription><lineNumber>3038</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>40</index></indexes><blocks><block>8</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testSempred_whenThree()]</killingTest><description>replaced boolean return with false for org/apache/skywalking/mqe/rt/grammar/MQEParser::expression_sempred</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression_sempred</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;I)Z</methodDescription><lineNumber>3040</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>45</index></indexes><blocks><block>9</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testSempred_whenMod()]</killingTest><description>replaced boolean return with false for org/apache/skywalking/mqe/rt/grammar/MQEParser::expression_sempred</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression_sempred</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;I)Z</methodDescription><lineNumber>3032</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>13</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced boolean return with true for org/apache/skywalking/mqe/rt/grammar/MQEParser::expression_sempred</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression_sempred</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;I)Z</methodDescription><lineNumber>3034</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>22</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced boolean return with true for org/apache/skywalking/mqe/rt/grammar/MQEParser::expression_sempred</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression_sempred</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;I)Z</methodDescription><lineNumber>3036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>31</index></indexes><blocks><block>6</block></blocks><killingTest/><description>replaced boolean return with true for org/apache/skywalking/mqe/rt/grammar/MQEParser::expression_sempred</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>expression_sempred</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;I)Z</methodDescription><lineNumber>3038</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>40</index></indexes><blocks><block>8</block></blocks><killingTest/><description>replaced boolean return with true for org/apache/skywalking/mqe/rt/grammar/MQEParser::expression_sempred</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>getATN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/atn/ATN;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMetric_thenExceptionReturnInputMismatchException()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::getATN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>getGrammarFileName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testGettersAndSetters()]</killingTest><description>replaced return value with &quot;&quot; for org/apache/skywalking/mqe/rt/grammar/MQEParser::getGrammarFileName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>getRuleNames</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testGettersAndSetters()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::getRuleNames</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>getSerializedATN</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testGettersAndSetters()]</killingTest><description>replaced return value with &quot;&quot; for org/apache/skywalking/mqe/rt/grammar/MQEParser::getSerializedATN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>getTokenNames</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testGettersAndSetters()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::getTokenNames</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>getVocabulary</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/Vocabulary;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMetric_thenExceptionReturnInputMismatchException()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::getVocabulary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelContext;</methodDescription><lineNumber>1679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabel_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelContext;</methodDescription><lineNumber>1681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelContext;</methodDescription><lineNumber>1683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabel_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelContext;</methodDescription><lineNumber>1685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>38</index></indexes><blocks><block>6</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabel_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelContext;</methodDescription><lineNumber>1687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>49</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelContext;</methodDescription><lineNumber>1693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>77</index></indexes><blocks><block>12</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelContext;</methodDescription><lineNumber>1694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>84</index></indexes><blocks><block>13</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabel_thenStopReturnCommonToken()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelContext;</methodDescription><lineNumber>1697</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>97</index><index>88</index><index>58</index></indexes><blocks><block>10</block><block>14</block><block>16</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabel_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelContext;</methodDescription><lineNumber>1699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>106</index></indexes><blocks><block>18</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabel_thenStopReturnCommonToken()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::label</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext;</methodDescription><lineNumber>1745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>57</index></indexes><blocks><block>10</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext;</methodDescription><lineNumber>1735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelList_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext;</methodDescription><lineNumber>1738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext;</methodDescription><lineNumber>1740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelList_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext;</methodDescription><lineNumber>1742</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>38</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext;</methodDescription><lineNumber>1743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>44</index></indexes><blocks><block>7</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext;</methodDescription><lineNumber>1748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>62</index></indexes><blocks><block>11</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext;</methodDescription><lineNumber>1750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>73</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext;</methodDescription><lineNumber>1754</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>83</index></indexes><blocks><block>15</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext;</methodDescription><lineNumber>1755</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>89</index></indexes><blocks><block>16</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext;</methodDescription><lineNumber>1762</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>121</index></indexes><blocks><block>21</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext;</methodDescription><lineNumber>1763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>128</index></indexes><blocks><block>22</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext;</methodDescription><lineNumber>1766</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>132</index><index>102</index><index>142</index></indexes><blocks><block>19</block><block>23</block><block>25</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelList_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext;</methodDescription><lineNumber>1768</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>151</index></indexes><blocks><block>27</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelList_thenStopReturnCommonToken()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::labelList</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameContext;</methodDescription><lineNumber>1516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>40</index></indexes><blocks><block>6</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelNameList_thenReturnTextIsEmptyString()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameContext;</methodDescription><lineNumber>1516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>43</index></indexes><blocks><block>7</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelName_givenA_thenReturnToStringTreeIsA()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameContext;</methodDescription><lineNumber>1520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>60</index></indexes><blocks><block>11</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelName_givenA_thenReturnToStringTreeIsA()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameContext;</methodDescription><lineNumber>1509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelName_givenListTokenSourceWithTokensIsArrayList_thenReturnStartTextIsEof()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='19'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameContext;</methodDescription><lineNumber>1512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='19'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameContext;</methodDescription><lineNumber>1514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameContext;</methodDescription><lineNumber>1521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>70</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportMatch</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameContext;</methodDescription><lineNumber>1532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>80</index><index>120</index><index>110</index></indexes><blocks><block>16</block><block>20</block><block>22</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelName_givenA_thenReturnToStringTreeIsA()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameContext;</methodDescription><lineNumber>1528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>99</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameContext;</methodDescription><lineNumber>1529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>106</index></indexes><blocks><block>19</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelNameList_thenReturnToStringTreeIs22942()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameContext;</methodDescription><lineNumber>1534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>129</index></indexes><blocks><block>24</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelName_givenListTokenSourceWithTokensIsArrayList_thenReturnStartTextIsEof()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::labelName</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelNameList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext;</methodDescription><lineNumber>1580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>57</index></indexes><blocks><block>10</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelNameList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext;</methodDescription><lineNumber>1570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelNameList_thenReturnToStringTreeIs22942()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelNameList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext;</methodDescription><lineNumber>1573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelNameList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext;</methodDescription><lineNumber>1575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelNameList_thenReturnToStringTreeIs22942()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelNameList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext;</methodDescription><lineNumber>1577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>38</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelNameList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext;</methodDescription><lineNumber>1578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>44</index></indexes><blocks><block>7</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelNameList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext;</methodDescription><lineNumber>1583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>62</index></indexes><blocks><block>11</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelNameList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext;</methodDescription><lineNumber>1585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>73</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelNameList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext;</methodDescription><lineNumber>1589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>83</index></indexes><blocks><block>15</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelNameList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext;</methodDescription><lineNumber>1590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>89</index></indexes><blocks><block>16</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelNameList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext;</methodDescription><lineNumber>1597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>121</index></indexes><blocks><block>21</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelNameList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext;</methodDescription><lineNumber>1598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>128</index></indexes><blocks><block>22</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelNameList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext;</methodDescription><lineNumber>1601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>132</index><index>102</index><index>142</index></indexes><blocks><block>19</block><block>23</block><block>25</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelNameList_thenReturnToStringTreeIs22942()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelNameList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext;</methodDescription><lineNumber>1603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>151</index></indexes><blocks><block>27</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelNameList_thenReturnToStringTreeIs22942()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::labelNameList</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelValueContext;</methodDescription><lineNumber>1630</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelValue_thenStartInputStreamReturnANTLRInputStream()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelValueContext;</methodDescription><lineNumber>1632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelValueContext;</methodDescription><lineNumber>1634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelValue_thenReturnChildrenSizeIsOne()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelValueContext;</methodDescription><lineNumber>1640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>57</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelValueContext;</methodDescription><lineNumber>1641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>64</index></indexes><blocks><block>9</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelValue_thenStopReturnCommonToken()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelValueContext;</methodDescription><lineNumber>1644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>68</index><index>38</index><index>77</index></indexes><blocks><block>6</block><block>10</block><block>12</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelValue_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>labelValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelValueContext;</methodDescription><lineNumber>1646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>86</index></indexes><blocks><block>14</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelValue_thenStartInputStreamReturnANTLRInputStream()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::labelValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>logical_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Logical_operatorContext;</methodDescription><lineNumber>2276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>40</index></indexes><blocks><block>6</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLogical_operator_thenStopReturnCommonToken()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>logical_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Logical_operatorContext;</methodDescription><lineNumber>2276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>43</index></indexes><blocks><block>7</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLogical_operator_thenStopReturnCommonToken()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>logical_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Logical_operatorContext;</methodDescription><lineNumber>2280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>60</index></indexes><blocks><block>11</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>logical_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Logical_operatorContext;</methodDescription><lineNumber>2269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLogical_operator_thenReturnStartTextIsEof2()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>logical_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Logical_operatorContext;</methodDescription><lineNumber>2272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>logical_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Logical_operatorContext;</methodDescription><lineNumber>2274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>logical_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Logical_operatorContext;</methodDescription><lineNumber>2281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>70</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportMatch</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>logical_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Logical_operatorContext;</methodDescription><lineNumber>2292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>80</index><index>120</index><index>110</index></indexes><blocks><block>16</block><block>20</block><block>22</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLogical_operator_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>logical_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Logical_operatorContext;</methodDescription><lineNumber>2288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>99</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>logical_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Logical_operatorContext;</methodDescription><lineNumber>2289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>106</index></indexes><blocks><block>19</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLogical_operator_thenStopReturnCommonToken()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>logical_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Logical_operatorContext;</methodDescription><lineNumber>2294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>129</index></indexes><blocks><block>24</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLogical_operator_thenReturnStartTextIsEof2()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::logical_operator</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator0</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context;</methodDescription><lineNumber>1998</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>40</index></indexes><blocks><block>6</block></blocks><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator0</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context;</methodDescription><lineNumber>1998</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>44</index></indexes><blocks><block>7</block></blocks><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator0</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context;</methodDescription><lineNumber>1998</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>46</index></indexes><blocks><block>7</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMathematical_operator0_thenStopReturnCommonToken()]</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator0</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context;</methodDescription><lineNumber>1998</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>41</index></indexes><blocks><block>6</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator0</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context;</methodDescription><lineNumber>1998</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>49</index></indexes><blocks><block>7</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMathematical_operator0_thenStopReturnCommonToken()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator0</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context;</methodDescription><lineNumber>2002</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>67</index></indexes><blocks><block>11</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator0</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context;</methodDescription><lineNumber>1991</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMathematical_operator0_thenReturnStartTextIsEof()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator0</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context;</methodDescription><lineNumber>1994</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator0</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context;</methodDescription><lineNumber>1996</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator0</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context;</methodDescription><lineNumber>2003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>77</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportMatch</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator0</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context;</methodDescription><lineNumber>2010</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>106</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator0</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context;</methodDescription><lineNumber>2011</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>113</index></indexes><blocks><block>19</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMathematical_operator0_thenStopReturnCommonToken()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator0</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context;</methodDescription><lineNumber>2014</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>117</index><index>87</index><index>127</index></indexes><blocks><block>16</block><block>20</block><block>22</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMathematical_operator0_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator0</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context;</methodDescription><lineNumber>2016</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>136</index></indexes><blocks><block>24</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMathematical_operator0_thenReturnStartTextIsEof()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::mathematical_operator0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator1</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator1Context;</methodDescription><lineNumber>2043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMathematical_operator1_thenStartInputStreamReturnANTLRInputStream()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator1</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator1Context;</methodDescription><lineNumber>2045</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator1</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator1Context;</methodDescription><lineNumber>2047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMathematical_operator1_thenReturnChildrenSizeIsOne()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator1</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator1Context;</methodDescription><lineNumber>2053</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>57</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator1</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator1Context;</methodDescription><lineNumber>2054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>64</index></indexes><blocks><block>9</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMathematical_operator1_thenStopReturnCommonToken()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator1</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator1Context;</methodDescription><lineNumber>2057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>68</index><index>38</index><index>77</index></indexes><blocks><block>6</block><block>10</block><block>12</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMathematical_operator1_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mathematical_operator1</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator1Context;</methodDescription><lineNumber>2059</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>86</index></indexes><blocks><block>14</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMathematical_operator1_thenStartInputStreamReturnANTLRInputStream()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::mathematical_operator1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>1460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>111</index></indexes><blocks><block>20</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>1460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>114</index></indexes><blocks><block>21</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>1437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMetric_thenExceptionReturnInputMismatchException()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>1440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>22</index></indexes><blocks><block>3</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMetric_thenExceptionReturnInputMismatchException()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>1441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMetric_thenExceptionReturnInputMismatchException()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>1444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>47</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>1446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>52</index></indexes><blocks><block>9</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMetric_givenANTLRInputStreamWithInput_thenReturnToStringTreeIs217Input()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>1451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>67</index></indexes><blocks><block>12</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>1453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>72</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>1455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>82</index></indexes><blocks><block>15</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>1457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>93</index></indexes><blocks><block>17</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>1458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>99</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>1462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>120</index></indexes><blocks><block>22</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>1467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>131</index></indexes><blocks><block>25</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>1475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>161</index></indexes><blocks><block>30</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>1476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>168</index></indexes><blocks><block>31</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMetric_thenExceptionReturnInputMismatchException()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>1479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>182</index><index>172</index><index>142</index></indexes><blocks><block>28</block><block>32</block><block>34</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMetric_givenANTLRInputStreamWithInput_thenReturnToStringTreeIs217Input()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>1481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>191</index></indexes><blocks><block>36</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMetric_thenExceptionReturnInputMismatchException()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::metric</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metricName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricNameContext;</methodDescription><lineNumber>1387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMetricName_thenReturnStartTextIsEof()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='17'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metricName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricNameContext;</methodDescription><lineNumber>1389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metricName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricNameContext;</methodDescription><lineNumber>1391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMetricName_thenReturnStartTextIsEof()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metricName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricNameContext;</methodDescription><lineNumber>1397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>57</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metricName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricNameContext;</methodDescription><lineNumber>1398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>64</index></indexes><blocks><block>9</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metricName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricNameContext;</methodDescription><lineNumber>1401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>68</index><index>38</index><index>77</index></indexes><blocks><block>6</block><block>10</block><block>12</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMetricName_givenA_thenReturnToStringTreeIsA()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>metricName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricNameContext;</methodDescription><lineNumber>1403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>86</index></indexes><blocks><block>14</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMetricName_thenReturnStartTextIsEof()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::metricName</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mulDivMod</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext;</methodDescription><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>40</index></indexes><blocks><block>6</block></blocks><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mulDivMod</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext;</methodDescription><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>44</index></indexes><blocks><block>7</block></blocks><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mulDivMod</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext;</methodDescription><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>46</index></indexes><blocks><block>7</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMulDivMod_givenANTLRInputStreamWithInputIs42_thenReturnToStringTreeIs42()]</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mulDivMod</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext;</methodDescription><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>41</index></indexes><blocks><block>6</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mulDivMod</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext;</methodDescription><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>49</index></indexes><blocks><block>7</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMulDivMod_givenANTLRInputStreamWithInputIs42_thenReturnToStringTreeIs42()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mulDivMod</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext;</methodDescription><lineNumber>1278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>67</index></indexes><blocks><block>11</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mulDivMod</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext;</methodDescription><lineNumber>1267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMulDivMod_thenReturnStartTextIsEof()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mulDivMod</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext;</methodDescription><lineNumber>1270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mulDivMod</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext;</methodDescription><lineNumber>1272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mulDivMod</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext;</methodDescription><lineNumber>1279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>77</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportMatch</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mulDivMod</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext;</methodDescription><lineNumber>1286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>106</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mulDivMod</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext;</methodDescription><lineNumber>1287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>113</index></indexes><blocks><block>19</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMulDivMod_givenANTLRInputStreamWithInputIs42_thenReturnToStringTreeIs42()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mulDivMod</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>117</index><index>87</index><index>127</index></indexes><blocks><block>16</block><block>20</block><block>22</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMulDivMod_givenANTLRInputStreamWithInputIs42_thenReturnToStringTreeIs42()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>mulDivMod</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext;</methodDescription><lineNumber>1292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>136</index></indexes><blocks><block>24</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMulDivMod_thenReturnStartTextIsEof()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::mulDivMod</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>order</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext;</methodDescription><lineNumber>2468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>40</index></indexes><blocks><block>6</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testOrder_givenANTLRInputStreamWithInputIs42_thenReturnToStringTreeIs42()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>order</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext;</methodDescription><lineNumber>2468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>43</index></indexes><blocks><block>7</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testOrder_givenANTLRInputStreamWithInputIs42_thenReturnToStringTreeIs42()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>order</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext;</methodDescription><lineNumber>2472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>60</index></indexes><blocks><block>11</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>order</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext;</methodDescription><lineNumber>2461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testOrder_givenANTLRInputStreamWithInputIsEmptyString_thenReturnStartTextIsEof()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>order</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext;</methodDescription><lineNumber>2464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>order</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext;</methodDescription><lineNumber>2466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>order</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext;</methodDescription><lineNumber>2473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>70</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportMatch</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>order</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext;</methodDescription><lineNumber>2484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>80</index><index>120</index><index>110</index></indexes><blocks><block>16</block><block>20</block><block>22</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testOrder_givenANTLRInputStreamWithInputIs42_thenReturnToStringTreeIs42()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>order</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext;</methodDescription><lineNumber>2480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>99</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>order</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext;</methodDescription><lineNumber>2481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>106</index></indexes><blocks><block>19</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testOrder_givenANTLRInputStreamWithInputIs42_thenReturnToStringTreeIs42()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>order</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext;</methodDescription><lineNumber>2486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>129</index></indexes><blocks><block>24</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testOrder_givenANTLRInputStreamWithInputIsEmptyString_thenReturnStartTextIsEof()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::order</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>parameter</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ParameterContext;</methodDescription><lineNumber>2417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testParameter_thenStartInputStreamReturnANTLRInputStream()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>parameter</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ParameterContext;</methodDescription><lineNumber>2419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>parameter</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ParameterContext;</methodDescription><lineNumber>2421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testParameter_thenReturnChildrenSizeIsOne()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>parameter</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ParameterContext;</methodDescription><lineNumber>2427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>57</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>parameter</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ParameterContext;</methodDescription><lineNumber>2428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>64</index></indexes><blocks><block>9</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testParameter_thenReturnToStringTreeIsA2a2a2a2()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>parameter</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ParameterContext;</methodDescription><lineNumber>2431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>68</index><index>38</index><index>77</index></indexes><blocks><block>6</block><block>10</block><block>12</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testParameter_thenReturnToStringTreeIsA2a2a2a2()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>parameter</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ParameterContext;</methodDescription><lineNumber>2433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>86</index></indexes><blocks><block>14</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testParameter_thenStartInputStreamReturnANTLRInputStream()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::parameter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>relabels</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$RelabelsContext;</methodDescription><lineNumber>2374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testRelabels_thenStartInputStreamReturnANTLRInputStream()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>relabels</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$RelabelsContext;</methodDescription><lineNumber>2376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>relabels</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$RelabelsContext;</methodDescription><lineNumber>2378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testRelabels_thenReturnChildrenSizeIsOne()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>relabels</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$RelabelsContext;</methodDescription><lineNumber>2384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>57</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>relabels</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$RelabelsContext;</methodDescription><lineNumber>2385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>64</index></indexes><blocks><block>9</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testRelabels_givenANTLRInputStreamWithInputIs42_thenReturnToStringTreeIs42()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>relabels</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$RelabelsContext;</methodDescription><lineNumber>2388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>68</index><index>38</index><index>77</index></indexes><blocks><block>6</block><block>10</block><block>12</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testRelabels_givenANTLRInputStreamWithInputIs42_thenReturnToStringTreeIs42()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>relabels</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$RelabelsContext;</methodDescription><lineNumber>2390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>86</index></indexes><blocks><block>14</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testRelabels_thenStartInputStreamReturnANTLRInputStream()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::relabels</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>replaceLabel</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ReplaceLabelContext;</methodDescription><lineNumber>1797</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testReplaceLabel_thenReturnToStringTreeIs25123925142()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>replaceLabel</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ReplaceLabelContext;</methodDescription><lineNumber>1799</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>replaceLabel</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ReplaceLabelContext;</methodDescription><lineNumber>1801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testReplaceLabel_thenReturnToStringTreeIs25123925142()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>replaceLabel</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ReplaceLabelContext;</methodDescription><lineNumber>1807</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>56</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>replaceLabel</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ReplaceLabelContext;</methodDescription><lineNumber>1808</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>63</index></indexes><blocks><block>9</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>replaceLabel</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ReplaceLabelContext;</methodDescription><lineNumber>1811</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>67</index><index>37</index><index>76</index></indexes><blocks><block>6</block><block>10</block><block>12</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testReplaceLabel_thenReturnToStringTreeIs25123925142()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>replaceLabel</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ReplaceLabelContext;</methodDescription><lineNumber>1813</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>85</index></indexes><blocks><block>14</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testReplaceLabel_thenReturnToStringTreeIs25123925142()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::replaceLabel</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$RootContext;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testRoot_thenReturnToStringTreeIs74Eof()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$RootContext;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$RootContext;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testRoot_thenReturnToStringTreeIs74Eof()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$RootContext;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>39</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$RootContext;</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>49</index><index>88</index><index>79</index></indexes><blocks><block>8</block><block>12</block><block>14</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testRoot_thenReturnToStringTreeIs747874204787442Eof()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$RootContext;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>68</index></indexes><blocks><block>10</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$RootContext;</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>75</index></indexes><blocks><block>11</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testRoot_givenA_thenExceptionReturnInputMismatchException()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>root</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$RootContext;</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>97</index></indexes><blocks><block>16</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testRoot_thenReturnToStringTreeIs74Eof()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::root</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>scalar</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ScalarContext;</methodDescription><lineNumber>1848</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>40</index></indexes><blocks><block>6</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testScalar_thenStopReturnCommonToken()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>scalar</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ScalarContext;</methodDescription><lineNumber>1848</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>43</index></indexes><blocks><block>7</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testScalar_thenStopReturnCommonToken()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>scalar</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ScalarContext;</methodDescription><lineNumber>1852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>60</index></indexes><blocks><block>11</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testScalar_thenChildrenFirstReturnTerminalNodeImpl()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>scalar</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ScalarContext;</methodDescription><lineNumber>1841</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testScalar_givenListTokenSourceWithTokensIsArrayList_thenReturnStartTextIsEof()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>scalar</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ScalarContext;</methodDescription><lineNumber>1844</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>scalar</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ScalarContext;</methodDescription><lineNumber>1846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>scalar</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ScalarContext;</methodDescription><lineNumber>1853</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>70</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportMatch</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>scalar</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ScalarContext;</methodDescription><lineNumber>1864</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>80</index><index>120</index><index>110</index></indexes><blocks><block>16</block><block>20</block><block>22</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testScalar_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>scalar</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ScalarContext;</methodDescription><lineNumber>1860</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>99</index></indexes><blocks><block>18</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testScalar_thenExceptionInputStreamReturnBufferedTokenStream()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>scalar</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ScalarContext;</methodDescription><lineNumber>1861</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>106</index></indexes><blocks><block>19</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testScalar_thenStopReturnCommonToken()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>scalar</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ScalarContext;</methodDescription><lineNumber>1866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>129</index></indexes><blocks><block>24</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testScalar_givenListTokenSourceWithTokensIsArrayList_thenReturnStartTextIsEof()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::scalar</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>sempred</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/RuleContext;II)Z</methodDescription><lineNumber>3025</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>13</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testSempred_whenZero()]</killingTest><description>replaced boolean return with false for org/apache/skywalking/mqe/rt/grammar/MQEParser::sempred</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>sempred</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/RuleContext;II)Z</methodDescription><lineNumber>3027</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>18</index></indexes><blocks><block>3</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testSempred_whenTwo2()]</killingTest><description>replaced boolean return with false for org/apache/skywalking/mqe/rt/grammar/MQEParser::sempred</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>sempred</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/RuleContext;II)Z</methodDescription><lineNumber>3025</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>13</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced boolean return with true for org/apache/skywalking/mqe/rt/grammar/MQEParser::sempred</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>sort_label_values</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_label_valuesContext;</methodDescription><lineNumber>2719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testSort_label_values_thenStartInputStreamReturnANTLRInputStream()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>sort_label_values</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_label_valuesContext;</methodDescription><lineNumber>2721</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>sort_label_values</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_label_valuesContext;</methodDescription><lineNumber>2723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testSort_label_values_thenReturnChildrenSizeIsOne()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>sort_label_values</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_label_valuesContext;</methodDescription><lineNumber>2729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>57</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>sort_label_values</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_label_valuesContext;</methodDescription><lineNumber>2730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>64</index></indexes><blocks><block>9</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testSort_label_values_thenStopReturnCommonToken()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>sort_label_values</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_label_valuesContext;</methodDescription><lineNumber>2733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>68</index><index>38</index><index>77</index></indexes><blocks><block>6</block><block>10</block><block>12</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testSort_label_values_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>sort_label_values</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_label_valuesContext;</methodDescription><lineNumber>2735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>86</index></indexes><blocks><block>14</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testSort_label_values_thenStartInputStreamReturnANTLRInputStream()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::sort_label_values</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>sort_values</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_valuesContext;</methodDescription><lineNumber>2676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testSort_values_thenStartInputStreamReturnANTLRInputStream()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>sort_values</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_valuesContext;</methodDescription><lineNumber>2678</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>sort_values</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_valuesContext;</methodDescription><lineNumber>2680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testSort_values_thenReturnChildrenSizeIsOne()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>sort_values</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_valuesContext;</methodDescription><lineNumber>2686</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>57</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>sort_values</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_valuesContext;</methodDescription><lineNumber>2687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>64</index></indexes><blocks><block>9</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testSort_values_thenStopReturnCommonToken()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>sort_values</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_valuesContext;</methodDescription><lineNumber>2690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>68</index><index>38</index><index>77</index></indexes><blocks><block>6</block><block>10</block><block>12</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testSort_values_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>sort_values</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_valuesContext;</methodDescription><lineNumber>2692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>86</index></indexes><blocks><block>14</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testSort_values_thenStartInputStreamReturnANTLRInputStream()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::sort_values</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>2177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>121</index></indexes><blocks><block>21</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>2155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testTopN_givenANTLRInputStreamWithInput_thenReturnToStringTreeIsInput()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>2158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>2160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>2162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>39</index></indexes><blocks><block>6</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>2164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>50</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>2166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>60</index></indexes><blocks><block>10</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>2168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>71</index></indexes><blocks><block>12</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>2170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>82</index></indexes><blocks><block>14</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>2172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>93</index></indexes><blocks><block>16</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>2174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>103</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>2175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>109</index></indexes><blocks><block>19</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::sync</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>2179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>126</index></indexes><blocks><block>22</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>2181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>137</index></indexes><blocks><block>24</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>2186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>148</index></indexes><blocks><block>27</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>2192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>177</index></indexes><blocks><block>31</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>2193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>184</index></indexes><blocks><block>32</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testTopN_givenANTLRInputStreamWithInput_thenReturnToStringTreeIsInput()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>2196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>198</index><index>188</index><index>158</index></indexes><blocks><block>29</block><block>33</block><block>35</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testTopN_givenANTLRInputStreamWithInput_thenReturnToStringTreeIsInput()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>2198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>207</index></indexes><blocks><block>37</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testTopN_givenANTLRInputStreamWithInput_thenReturnToStringTreeIsInput()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::topN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topNOf</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfContext;</methodDescription><lineNumber>2225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testTopNOf_thenStartInputStreamReturnANTLRInputStream()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topNOf</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfContext;</methodDescription><lineNumber>2227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topNOf</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfContext;</methodDescription><lineNumber>2229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testTopNOf_givenListTokenSourceWithTokensIsArrayList_thenReturnChildrenSizeIsOne()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topNOf</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfContext;</methodDescription><lineNumber>2235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>57</index></indexes><blocks><block>8</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topNOf</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfContext;</methodDescription><lineNumber>2236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>64</index></indexes><blocks><block>9</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testTopNOf_thenStopReturnCommonToken()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topNOf</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfContext;</methodDescription><lineNumber>2239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>68</index><index>38</index><index>77</index></indexes><blocks><block>6</block><block>10</block><block>12</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testTopNOf_thenStopReturnCommonToken()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>topNOf</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfContext;</methodDescription><lineNumber>2241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>86</index></indexes><blocks><block>14</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testTopNOf_thenStartInputStreamReturnANTLRInputStream()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::topNOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>trend</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TrendContext;</methodDescription><lineNumber>2094</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>40</index></indexes><blocks><block>6</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testTrend_thenReturnToStringTreeIsA()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>trend</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TrendContext;</methodDescription><lineNumber>2094</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>43</index></indexes><blocks><block>7</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testTrend_thenReturnToStringTreeIsA()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>trend</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TrendContext;</methodDescription><lineNumber>2098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>60</index></indexes><blocks><block>11</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>trend</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TrendContext;</methodDescription><lineNumber>2087</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testTrend_givenListTokenSourceWithTokensIsArrayList_thenReturnStartTextIsEof()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>trend</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TrendContext;</methodDescription><lineNumber>2090</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::enterOuterAlt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>trend</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TrendContext;</methodDescription><lineNumber>2092</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::setState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>trend</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TrendContext;</methodDescription><lineNumber>2099</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>70</index></indexes><blocks><block>13</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportMatch</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>trend</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TrendContext;</methodDescription><lineNumber>2110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>80</index><index>120</index><index>110</index></indexes><blocks><block>16</block><block>20</block><block>22</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testTrend_thenReturnToStringTreeIsA()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser::exitRule</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>trend</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TrendContext;</methodDescription><lineNumber>2106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>99</index></indexes><blocks><block>18</block></blocks><killingTest/><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::reportError</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>trend</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TrendContext;</methodDescription><lineNumber>2107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>106</index></indexes><blocks><block>19</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testTrend_thenReturnToStringTreeIsA()]</killingTest><description>removed call to org/antlr/v4/runtime/ANTLRErrorStrategy::recover</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser</mutatedClass><mutatedMethod>trend</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TrendContext;</methodDescription><lineNumber>2112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>129</index></indexes><blocks><block>24</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testTrend_givenListTokenSourceWithTokensIsArrayList_thenReturnStartTextIsEof()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser::trend</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitAddSub</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubContext;)Ljava/lang/Object;</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitAddSub</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitAddSubOp</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubOpContext;)Ljava/lang/Object;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitAddSubOp</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitAggregateLabels</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsContext;)Ljava/lang/Object;</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitAggregateLabels</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitAggregateLabelsFunc</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext;)Ljava/lang/Object;</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitAggregateLabelsFunc</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitAggregateLabelsFuncName</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext;)Ljava/lang/Object;</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitAggregateLabelsFuncName</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitAggregateLabelsOp</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsOpContext;)Ljava/lang/Object;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitAggregateLabelsOp</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitAggregation</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;)Ljava/lang/Object;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitAggregation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitAggregationOp</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationOpContext;)Ljava/lang/Object;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitAggregationOp</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitAttribute</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext;)Ljava/lang/Object;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitAttribute</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitAttributeList</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext;)Ljava/lang/Object;</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitAttributeList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitAttributeName</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext;)Ljava/lang/Object;</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitAttributeName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitBaseline</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineContext;)Ljava/lang/Object;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitBaseline</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitBaselineOP</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineOPContext;)Ljava/lang/Object;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitBaselineOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitBaseline_type</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext;)Ljava/lang/Object;</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitBaseline_type</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitBoolOP</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$BoolOPContext;)Ljava/lang/Object;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitBoolOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitBool_operator</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Bool_operatorContext;)Ljava/lang/Object;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitBool_operator</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitCompare</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;)Ljava/lang/Object;</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitCompare</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitCompareOp</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareOpContext;)Ljava/lang/Object;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitCompareOp</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitExprNode</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExprNodeContext;)Ljava/lang/Object;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitExprNode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitExpressionList</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext;)Ljava/lang/Object;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitExpressionList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitExpressionNode</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionNodeContext;)Ljava/lang/Object;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitExpressionNode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitLabel</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelContext;)Ljava/lang/Object;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitLabel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitLabelList</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext;)Ljava/lang/Object;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitLabelList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitLabelName</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameContext;)Ljava/lang/Object;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitLabelName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitLabelNameList</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext;)Ljava/lang/Object;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitLabelNameList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitLabelValue</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelValueContext;)Ljava/lang/Object;</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitLabelValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitLogicalOperatorOP</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LogicalOperatorOPContext;)Ljava/lang/Object;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitLogicalOperatorOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitLogical_operator</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Logical_operatorContext;)Ljava/lang/Object;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitLogical_operator</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitMathematicalOperator0OP</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MathematicalOperator0OPContext;)Ljava/lang/Object;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitMathematicalOperator0OP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitMathematicalOperator1OP</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MathematicalOperator1OPContext;)Ljava/lang/Object;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitMathematicalOperator1OP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitMathematical_operator0</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context;)Ljava/lang/Object;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitMathematical_operator0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitMathematical_operator1</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator1Context;)Ljava/lang/Object;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitMathematical_operator1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitMetric</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;)Ljava/lang/Object;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitMetric</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitMetricName</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricNameContext;)Ljava/lang/Object;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitMetricName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitMulDivMod</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext;)Ljava/lang/Object;</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitMulDivMod</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitMulDivModOp</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModOpContext;)Ljava/lang/Object;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitMulDivModOp</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitOrder</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext;)Ljava/lang/Object;</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitOrder</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitParameter</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ParameterContext;)Ljava/lang/Object;</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitParameter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitParensOp</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ParensOpContext;)Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitParensOp</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitRelabels</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$RelabelsContext;)Ljava/lang/Object;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitRelabels</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitRelablesOP</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$RelablesOPContext;)Ljava/lang/Object;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitRelablesOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitReplaceLabel</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ReplaceLabelContext;)Ljava/lang/Object;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitReplaceLabel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitRoot</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$RootContext;)Ljava/lang/Object;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitRoot</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitScalar</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ScalarContext;)Ljava/lang/Object;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitScalar</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitSortLabelValuesOP</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$SortLabelValuesOPContext;)Ljava/lang/Object;</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitSortLabelValuesOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitSortValuesOP</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$SortValuesOPContext;)Ljava/lang/Object;</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitSortValuesOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitSort_label_values</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_label_valuesContext;)Ljava/lang/Object;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitSort_label_values</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitSort_values</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_valuesContext;)Ljava/lang/Object;</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitSort_values</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitTopN</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;)Ljava/lang/Object;</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitTopN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitTopNOP</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOPContext;)Ljava/lang/Object;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitTopNOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitTopNOf</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfContext;)Ljava/lang/Object;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitTopNOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitTopNOfOP</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfOPContext;)Ljava/lang/Object;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitTopNOfOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitTrend</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TrendContext;)Ljava/lang/Object;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitTrend</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParserBaseVisitor.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParserBaseVisitor</mutatedClass><mutatedMethod>visitTrendOP</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TrendOPContext;)Ljava/lang/Object;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParserBaseVisitor::visitTrendOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfOPContext</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;)V</methodDescription><lineNumber>508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfOPContext::copyFrom</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfOPContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfOPContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfOPContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfOPContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfOPContext</mutatedClass><mutatedMethod>INTEGER</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfOPContext::INTEGER</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfOPContext</mutatedClass><mutatedMethod>L_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfOPContext::L_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfOPContext</mutatedClass><mutatedMethod>R_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfOPContext::R_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfOPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfOPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfOPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfOPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterTopNOfOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfOPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfOPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitTopNOfOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfOPContext</mutatedClass><mutatedMethod>order</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext;</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfOPContext::order</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfOPContext</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfOPContext::topN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfOPContext</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfOPContext::topN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfOPContext</mutatedClass><mutatedMethod>topNOf</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfContext;</methodDescription><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfOPContext::topNOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>2122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNContext</mutatedClass><mutatedMethod>INTEGER</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext::INTEGER</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNContext</mutatedClass><mutatedMethod>L_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext::L_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNContext</mutatedClass><mutatedMethod>R_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext::R_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNContext</mutatedClass><mutatedMethod>TOP_N</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext::TOP_N</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNContext</mutatedClass><mutatedMethod>attributeList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext;</methodDescription><lineNumber>2132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext::attributeList</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterTopN</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitTopN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNContext</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>2120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext::metric</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNContext</mutatedClass><mutatedMethod>order</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext;</methodDescription><lineNumber>2128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext::order</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelablesOPContext</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;)V</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser$RelablesOPContext::copyFrom</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelablesOPContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for org/apache/skywalking/mqe/rt/grammar/MQEParser$RelablesOPContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelablesOPContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$RelablesOPContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelablesOPContext</mutatedClass><mutatedMethod>L_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$RelablesOPContext::L_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelablesOPContext</mutatedClass><mutatedMethod>R_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$RelablesOPContext::R_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelablesOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelablesOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$RelablesOPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelablesOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$RelablesOPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelablesOPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelablesOPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterRelablesOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelablesOPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelablesOPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitRelablesOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelablesOPContext</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$RelablesOPContext::expression</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelablesOPContext</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelContext;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$RelablesOPContext::label</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelablesOPContext</mutatedClass><mutatedMethod>relabels</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$RelabelsContext;</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$RelablesOPContext::relabels</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelablesOPContext</mutatedClass><mutatedMethod>replaceLabel</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ReplaceLabelContext;</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$RelablesOPContext::replaceLabel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortValuesOPContext</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;)V</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser$SortValuesOPContext::copyFrom</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortValuesOPContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortValuesOPContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortValuesOPContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortValuesOPContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortValuesOPContext</mutatedClass><mutatedMethod>INTEGER</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortValuesOPContext::INTEGER</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortValuesOPContext</mutatedClass><mutatedMethod>L_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortValuesOPContext::L_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortValuesOPContext</mutatedClass><mutatedMethod>R_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortValuesOPContext::R_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortValuesOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortValuesOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortValuesOPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortValuesOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortValuesOPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortValuesOPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortValuesOPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterSortValuesOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortValuesOPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortValuesOPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitSortValuesOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortValuesOPContext</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>579</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortValuesOPContext::expression</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortValuesOPContext</mutatedClass><mutatedMethod>order</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext;</methodDescription><lineNumber>586</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortValuesOPContext::order</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortValuesOPContext</mutatedClass><mutatedMethod>sort_values</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_valuesContext;</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortValuesOPContext::sort_values</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortLabelValuesOPContext</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;)V</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser$SortLabelValuesOPContext::copyFrom</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortLabelValuesOPContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortLabelValuesOPContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortLabelValuesOPContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortLabelValuesOPContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortLabelValuesOPContext</mutatedClass><mutatedMethod>L_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortLabelValuesOPContext::L_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortLabelValuesOPContext</mutatedClass><mutatedMethod>R_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortLabelValuesOPContext::R_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortLabelValuesOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortLabelValuesOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortLabelValuesOPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortLabelValuesOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortLabelValuesOPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortLabelValuesOPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortLabelValuesOPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterSortLabelValuesOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortLabelValuesOPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortLabelValuesOPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitSortLabelValuesOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortLabelValuesOPContext</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortLabelValuesOPContext::expression</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortLabelValuesOPContext</mutatedClass><mutatedMethod>labelNameList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortLabelValuesOPContext::labelNameList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortLabelValuesOPContext</mutatedClass><mutatedMethod>order</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortLabelValuesOPContext::order</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$SortLabelValuesOPContext</mutatedClass><mutatedMethod>sort_label_values</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_label_valuesContext;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$SortLabelValuesOPContext::sort_label_values</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareContext</mutatedClass><mutatedMethod>BOOL</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext::BOOL</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareContext</mutatedClass><mutatedMethod>DEQ</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext::DEQ</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareContext</mutatedClass><mutatedMethod>GT</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext::GT</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareContext</mutatedClass><mutatedMethod>GTE</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext::GTE</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareContext</mutatedClass><mutatedMethod>LT</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext::LT</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareContext</mutatedClass><mutatedMethod>LTE</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext::LTE</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareContext</mutatedClass><mutatedMethod>NEQ</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext::NEQ</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterCompare</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitCompare</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineOPContext</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;)V</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineOPContext::copyFrom</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineOPContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineOPContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineOPContext</mutatedClass><mutatedMethod>L_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineOPContext::L_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineOPContext</mutatedClass><mutatedMethod>R_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineOPContext::R_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineOPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineOPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineOPContext</mutatedClass><mutatedMethod>baseline</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineContext;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineOPContext::baseline</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineOPContext</mutatedClass><mutatedMethod>baseline_type</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext;</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineOPContext::baseline_type</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineOPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineOPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterBaselineOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineOPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineOPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitBaselineOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineOPContext</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineOPContext::metric</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeNameContext</mutatedClass><mutatedMethod>ATTR0</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext::ATTR0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeNameContext</mutatedClass><mutatedMethod>ATTR1</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext::ATTR1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeNameContext</mutatedClass><mutatedMethod>ATTR2</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2742</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext::ATTR2</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeNameContext</mutatedClass><mutatedMethod>ATTR3</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext::ATTR3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeNameContext</mutatedClass><mutatedMethod>ATTR4</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext::ATTR4</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeNameContext</mutatedClass><mutatedMethod>ATTR5</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext::ATTR5</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeNameContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2760</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeNameContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2760</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeNameContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeNameContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeNameContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterAttributeName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeNameContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2756</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeNameContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2756</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitAttributeName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeNameContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext::getRuleIndex</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationContext</mutatedClass><mutatedMethod>AVG</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1871</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext::AVG</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationContext</mutatedClass><mutatedMethod>COUNT</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1872</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext::COUNT</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationContext</mutatedClass><mutatedMethod>LATEST</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1873</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext::LATEST</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationContext</mutatedClass><mutatedMethod>MAX</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1875</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext::MAX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationContext</mutatedClass><mutatedMethod>MIN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1876</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext::MIN</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationContext</mutatedClass><mutatedMethod>SUM</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext::SUM</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1891</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1891</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1883</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1883</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterAggregation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitAggregation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1880</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregationContextGetRuleIndex()]</killingTest><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator1OPContext</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;)V</methodDescription><lineNumber>669</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser$MathematicalOperator1OPContext::copyFrom</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator1OPContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>664</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MathematicalOperator1OPContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator1OPContext</mutatedClass><mutatedMethod>L_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>660</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MathematicalOperator1OPContext::L_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator1OPContext</mutatedClass><mutatedMethod>R_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MathematicalOperator1OPContext::R_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator1OPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator1OPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MathematicalOperator1OPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator1OPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MathematicalOperator1OPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator1OPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator1OPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterMathematicalOperator1OP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator1OPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator1OPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitMathematicalOperator1OP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator1OPContext</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>662</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MathematicalOperator1OPContext::expression</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator1OPContext</mutatedClass><mutatedMethod>mathematical_operator1</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator1Context;</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MathematicalOperator1OPContext::mathematical_operator1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator1OPContext</mutatedClass><mutatedMethod>parameter</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ParameterContext;</methodDescription><lineNumber>666</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MathematicalOperator1OPContext::parameter</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsOpContext</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;)V</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsOpContext::copyFrom</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsOpContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsOpContext::COMMA</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsOpContext</mutatedClass><mutatedMethod>L_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsOpContext::L_PAREN</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsOpContext</mutatedClass><mutatedMethod>R_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsOpContext::R_PAREN</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsOpContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsOpContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsOpContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsOpContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsOpContext::accept</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsOpContext</mutatedClass><mutatedMethod>aggregateLabels</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsContext;</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsOpContext::aggregateLabels</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsOpContext</mutatedClass><mutatedMethod>aggregateLabelsFunc</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext;</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsOpContext::aggregateLabelsFunc</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsOpContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsOpContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterAggregateLabelsOp</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsOpContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsOpContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitAggregateLabelsOp</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsOpContext</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsOpContext::expression</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendOPContext</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;)V</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser$TrendOPContext::copyFrom</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendOPContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TrendOPContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendOPContext</mutatedClass><mutatedMethod>INTEGER</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TrendOPContext::INTEGER</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendOPContext</mutatedClass><mutatedMethod>L_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TrendOPContext::L_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendOPContext</mutatedClass><mutatedMethod>R_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TrendOPContext::R_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TrendOPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TrendOPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendOPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendOPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterTrendOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendOPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendOPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitTrendOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendOPContext</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TrendOPContext::metric</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendOPContext</mutatedClass><mutatedMethod>trend</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TrendContext;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TrendOPContext::trend</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationOpContext</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;)V</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationOpContext::copyFrom</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationOpContext</mutatedClass><mutatedMethod>L_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationOpContext::L_PAREN</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationOpContext</mutatedClass><mutatedMethod>R_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationOpContext::R_PAREN</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationOpContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationOpContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationOpContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationOpContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationOpContext::accept</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationOpContext</mutatedClass><mutatedMethod>aggregation</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationContext;</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationOpContext::aggregation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationOpContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationOpContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterAggregationOp</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationOpContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationOpContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitAggregationOp</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregationOpContext</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregationOpContext::expression</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricContext</mutatedClass><mutatedMethod>L_BRACE</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext::L_BRACE</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricContext</mutatedClass><mutatedMethod>R_BRACE</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext::R_BRACE</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterMetric</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitMetric</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricContext</mutatedClass><mutatedMethod>labelList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext;</methodDescription><lineNumber>1414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext::labelList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricContext</mutatedClass><mutatedMethod>metricName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricNameContext;</methodDescription><lineNumber>1409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext::metricName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator0OPContext</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;)V</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser$MathematicalOperator0OPContext::copyFrom</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator0OPContext</mutatedClass><mutatedMethod>L_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MathematicalOperator0OPContext::L_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator0OPContext</mutatedClass><mutatedMethod>R_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MathematicalOperator0OPContext::R_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator0OPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator0OPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MathematicalOperator0OPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator0OPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MathematicalOperator0OPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator0OPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator0OPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterMathematicalOperator0OP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator0OPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator0OPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitMathematicalOperator0OP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator0OPContext</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MathematicalOperator0OPContext::expression</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MathematicalOperator0OPContext</mutatedClass><mutatedMethod>mathematical_operator0</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context;</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MathematicalOperator0OPContext::mathematical_operator0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeListContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>2864</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext::COMMA</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeListContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeListContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2882</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeListContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2882</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeListContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2883</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeListContext</mutatedClass><mutatedMethod>attribute</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>2859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext::attribute</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeListContext</mutatedClass><mutatedMethod>attribute</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext;</methodDescription><lineNumber>2862</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext::attribute</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeListContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeListContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterAttributeList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeListContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeListContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitAttributeList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeListContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2871</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeListContext::getRuleIndex</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeContext</mutatedClass><mutatedMethod>EQ</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext::EQ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeContext</mutatedClass><mutatedMethod>NEQ</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2802</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext::NEQ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeContext</mutatedClass><mutatedMethod>VALUE_STRING</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext::VALUE_STRING</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext::accept</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeContext</mutatedClass><mutatedMethod>attributeName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeNameContext;</methodDescription><lineNumber>2798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext::attributeName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2809</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2809</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterAttribute</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2813</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2813</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitAttribute</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AttributeContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2806</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAttributeContextGetRuleIndex()]</killingTest><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$AttributeContext::getRuleIndex</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncNameContext</mutatedClass><mutatedMethod>AVG</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext::AVG</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncNameContext</mutatedClass><mutatedMethod>MAX</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext::MAX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncNameContext</mutatedClass><mutatedMethod>MIN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext::MIN</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncNameContext</mutatedClass><mutatedMethod>SUM</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext::SUM</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncNameContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncNameContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncNameContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncNameContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2609</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncNameContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2609</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterAggregateLabelsFuncName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncNameContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncNameContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitAggregateLabelsFuncName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncNameContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregateLabelsFuncNameContextGetRuleIndex()]</killingTest><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext::getRuleIndex</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncContext</mutatedClass><mutatedMethod>L_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext::L_PAREN</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncContext</mutatedClass><mutatedMethod>R_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext::R_PAREN</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext::accept</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncContext</mutatedClass><mutatedMethod>aggregateLabelsFuncName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncNameContext;</methodDescription><lineNumber>2535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext::aggregateLabelsFuncName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterAggregateLabelsFunc</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitAggregateLabelsFunc</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregateLabelsFuncContextGetRuleIndex()]</killingTest><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext::getRuleIndex</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsFuncContext</mutatedClass><mutatedMethod>labelNameList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext;</methodDescription><lineNumber>2539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsFuncContext::labelNameList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelListContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelListContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelListContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelListContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelListContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelListContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelListContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterLabelList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelListContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelListContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitLabelList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelListContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext::getRuleIndex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelListContext</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelList_thenStopReturnCommonToken()]</killingTest><description>replaced return value with Collections.emptyList for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext::label</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelListContext</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelContext;</methodDescription><lineNumber>1708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelListContext::label</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LogicalOperatorOPContext</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;)V</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser$LogicalOperatorOPContext::copyFrom</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LogicalOperatorOPContext</mutatedClass><mutatedMethod>L_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>635</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LogicalOperatorOPContext::L_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LogicalOperatorOPContext</mutatedClass><mutatedMethod>R_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LogicalOperatorOPContext::R_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LogicalOperatorOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>651</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LogicalOperatorOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>651</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LogicalOperatorOPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LogicalOperatorOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>652</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LogicalOperatorOPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LogicalOperatorOPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LogicalOperatorOPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterLogicalOperatorOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LogicalOperatorOPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LogicalOperatorOPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitLogicalOperatorOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LogicalOperatorOPContext</mutatedClass><mutatedMethod>expressionList</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext;</methodDescription><lineNumber>637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LogicalOperatorOPContext::expressionList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LogicalOperatorOPContext</mutatedClass><mutatedMethod>logical_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Logical_operatorContext;</methodDescription><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LogicalOperatorOPContext::logical_operator</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameListContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameListContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameListContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameListContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameListContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameListContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameListContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterLabelNameList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameListContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameListContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitLabelNameList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameListContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameListContext</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext::labelName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameListContext</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameContext;</methodDescription><lineNumber>1543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameListContext::labelName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionListContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1063</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for org/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionListContext</mutatedClass><mutatedMethod>COMMA</mutatedMethod><methodDescription>(I)Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1065</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext::COMMA</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionListContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1081</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionListContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1081</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionListContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1082</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionListContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1073</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionListContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1073</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterExpressionList</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionListContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1077</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionListContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1077</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitExpressionList</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionListContext</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>1058</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpressionList_thenReturnTextIsEmptyString()]</killingTest><description>replaced return value with Collections.emptyList for org/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext::expression</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionListContext</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>1061</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext::expression</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionListContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1070</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionListContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BoolOPContext</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser$BoolOPContext::copyFrom</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BoolOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BoolOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$BoolOPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BoolOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$BoolOPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BoolOPContext</mutatedClass><mutatedMethod>bool_operator</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$Bool_operatorContext;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$BoolOPContext::bool_operator</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BoolOPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BoolOPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterBoolOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BoolOPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BoolOPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitBoolOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BoolOPContext</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for org/apache/skywalking/mqe/rt/grammar/MQEParser$BoolOPContext::expression</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BoolOPContext</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$BoolOPContext::expression</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator0Context</mutatedClass><mutatedMethod>ABS</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context::ABS</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator0Context</mutatedClass><mutatedMethod>CEIL</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1968</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context::CEIL</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator0Context</mutatedClass><mutatedMethod>FLOOR</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1969</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context::FLOOR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator0Context</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1984</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator0Context</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1984</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator0Context</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator0Context</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator0Context</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterMathematical_operator0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator0Context</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1980</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator0Context</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1980</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitMathematical_operator0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator0Context</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1973</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator0Context::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModOpContext</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;)V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModOpContext::copyFrom</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModOpContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModOpContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModOpContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModOpContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModOpContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModOpContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModOpContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterMulDivModOp</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModOpContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModOpContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitMulDivModOp</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModOpContext</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for org/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModOpContext::expression</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModOpContext</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModOpContext::expression</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModOpContext</mutatedClass><mutatedMethod>mulDivMod</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext;</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModOpContext::mulDivMod</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParensOpContext</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser$ParensOpContext::copyFrom</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParensOpContext</mutatedClass><mutatedMethod>L_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ParensOpContext::L_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParensOpContext</mutatedClass><mutatedMethod>R_PAREN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ParensOpContext::R_PAREN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParensOpContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParensOpContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ParensOpContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParensOpContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ParensOpContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParensOpContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParensOpContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterParensOp</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParensOpContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParensOpContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitParensOp</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParensOpContext</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ParensOpContext::expression</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModContext</mutatedClass><mutatedMethod>DIV</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext::DIV</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModContext</mutatedClass><mutatedMethod>MOD</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext::MOD</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModContext</mutatedClass><mutatedMethod>MUL</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext::MUL</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterMulDivMod</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitMulDivMod</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MulDivModContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$MulDivModContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareOpContext</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;)V</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser$CompareOpContext::copyFrom</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareOpContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareOpContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$CompareOpContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareOpContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$CompareOpContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareOpContext</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$CompareContext;</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$CompareOpContext::compare</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareOpContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareOpContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterCompareOp</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareOpContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareOpContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitCompareOp</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareOpContext</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for org/apache/skywalking/mqe/rt/grammar/MQEParser$CompareOpContext::expression</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$CompareOpContext</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$CompareOpContext::expression</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelContext</mutatedClass><mutatedMethod>EQ</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelContext::EQ</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1664</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1664</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterLabel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitLabel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelContext</mutatedClass><mutatedMethod>labelName</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameContext;</methodDescription><lineNumber>1652</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelContext::labelName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelContext</mutatedClass><mutatedMethod>labelValue</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelValueContext;</methodDescription><lineNumber>1656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelContext::labelValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Baseline_typeContext</mutatedClass><mutatedMethod>LOWER</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2972</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext::LOWER</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Baseline_typeContext</mutatedClass><mutatedMethod>UPPER</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext::UPPER</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Baseline_typeContext</mutatedClass><mutatedMethod>VALUE</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext::VALUE</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Baseline_typeContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2987</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Baseline_typeContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2987</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Baseline_typeContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2988</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Baseline_typeContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Baseline_typeContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterBaseline_type</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Baseline_typeContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Baseline_typeContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitBaseline_type</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Baseline_typeContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$Baseline_typeContext::getRuleIndex</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubOpContext</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;)V</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubOpContext::copyFrom</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubOpContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubOpContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubOpContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubOpContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubOpContext::accept</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubOpContext</mutatedClass><mutatedMethod>addSub</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubContext;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubOpContext::addSub</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubOpContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubOpContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterAddSubOp</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubOpContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubOpContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitAddSubOp</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubOpContext</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with Collections.emptyList for org/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubOpContext::expression</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubOpContext</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>(I)Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubOpContext::expression</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$OrderContext</mutatedClass><mutatedMethod>ASC</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext::ASC</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$OrderContext</mutatedClass><mutatedMethod>DES</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext::DES</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$OrderContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$OrderContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$OrderContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$OrderContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$OrderContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterOrder</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$OrderContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$OrderContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitOrder</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$OrderContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$OrderContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendContext</mutatedClass><mutatedMethod>INCREASE</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2064</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TrendContext::INCREASE</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendContext</mutatedClass><mutatedMethod>RATE</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2065</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TrendContext::RATE</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2080</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2080</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TrendContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2081</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TrendContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2072</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2072</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterTrend</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2076</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2076</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitTrend</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TrendContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2069</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$TrendContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameContext</mutatedClass><mutatedMethod>GENERAL_LABEL_NAME</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameContext::GENERAL_LABEL_NAME</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameContext</mutatedClass><mutatedMethod>NAME_STRING</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameContext::NAME_STRING</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameContext::accept</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelName_givenMQEParserWithInputIsBufferedTokenStreamTraceIsTrue()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterLabelName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testLabelName_givenMQEParserWithInputIsBufferedTokenStreamTraceIsTrue()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitLabelName</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelNameContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelNameContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Bool_operatorContext</mutatedClass><mutatedMethod>AND</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Bool_operatorContext::AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Bool_operatorContext</mutatedClass><mutatedMethod>OR</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Bool_operatorContext::OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Bool_operatorContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Bool_operatorContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Bool_operatorContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Bool_operatorContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Bool_operatorContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Bool_operatorContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Bool_operatorContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterBool_operator</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Bool_operatorContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Bool_operatorContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitBool_operator</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Bool_operatorContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$Bool_operatorContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionNodeContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionNodeContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionNodeContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionNodeContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionNodeContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionNodeContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionNodeContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterExpressionNode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionNodeContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionNodeContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitExpressionNode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionNodeContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionNodeContext::getRuleIndex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionNodeContext</mutatedClass><mutatedMethod>metric</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$MetricContext;</methodDescription><lineNumber>1127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpressionNode_givenA_thenReturnMetricToStringTreeIs203217203A()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionNodeContext::metric</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionNodeContext</mutatedClass><mutatedMethod>scalar</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ScalarContext;</methodDescription><lineNumber>1130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionNodeContext::scalar</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Logical_operatorContext</mutatedClass><mutatedMethod>IS_PRESENT</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Logical_operatorContext::IS_PRESENT</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Logical_operatorContext</mutatedClass><mutatedMethod>VIEW_AS_SEQ</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Logical_operatorContext::VIEW_AS_SEQ</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Logical_operatorContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Logical_operatorContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Logical_operatorContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Logical_operatorContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Logical_operatorContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Logical_operatorContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Logical_operatorContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterLogical_operator</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Logical_operatorContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Logical_operatorContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitLogical_operator</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Logical_operatorContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$Logical_operatorContext::getRuleIndex</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubContext</mutatedClass><mutatedMethod>ADD</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubContext::ADD</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubContext</mutatedClass><mutatedMethod>SUB</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubContext::SUB</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterAddSub</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitAddSub</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AddSubContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAddSubContextGettersAndSetters()]</killingTest><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$AddSubContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ScalarContext</mutatedClass><mutatedMethod>DECIMAL</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ScalarContext::DECIMAL</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ScalarContext</mutatedClass><mutatedMethod>INTEGER</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ScalarContext::INTEGER</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ScalarContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1834</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ScalarContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1834</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ScalarContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ScalarContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1835</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ScalarContext::accept</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ScalarContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ScalarContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterScalar</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ScalarContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ScalarContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitScalar</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ScalarContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$ScalarContext::getRuleIndex</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsContext</mutatedClass><mutatedMethod>AGGREGATE_LABELS</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsContext::AGGREGATE_LABELS</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterAggregateLabels</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitAggregateLabels</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$AggregateLabelsContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregateLabelsContextGetRuleIndex()]</killingTest><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$AggregateLabelsContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ReplaceLabelContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1790</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ReplaceLabelContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1790</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ReplaceLabelContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ReplaceLabelContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1791</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ReplaceLabelContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ReplaceLabelContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ReplaceLabelContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterReplaceLabel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ReplaceLabelContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1786</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ReplaceLabelContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1786</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitReplaceLabel</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ReplaceLabelContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1779</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$ReplaceLabelContext::getRuleIndex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ReplaceLabelContext</mutatedClass><mutatedMethod>label</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$LabelContext;</methodDescription><lineNumber>1774</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testReplaceLabel_thenStartInputStreamReturnANTLRInputStream()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ReplaceLabelContext::label</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RootContext</mutatedClass><mutatedMethod>EOF</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$RootContext::EOF</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RootContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RootContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$RootContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RootContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$RootContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RootContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RootContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterRoot</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RootContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RootContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitRoot</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RootContext</mutatedClass><mutatedMethod>expression</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testRoot_thenReturnToStringTreeIs747874204787442Eof()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$RootContext::expression</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfContext</mutatedClass><mutatedMethod>TOP_N_OF</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfContext::TOP_N_OF</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterTopNOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitTopNOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOfContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOfContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricNameContext</mutatedClass><mutatedMethod>NAME_STRING</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MetricNameContext::NAME_STRING</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricNameContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricNameContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MetricNameContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricNameContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$MetricNameContext::accept</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricNameContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMetricName_givenMQEParserWithInputIsBufferedTokenStreamTraceIsTrue()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricNameContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterMetricName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricNameContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testMetricName_givenMQEParserWithInputIsBufferedTokenStreamTraceIsTrue()]</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricNameContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitMetricName</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$MetricNameContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$MetricNameContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineContext</mutatedClass><mutatedMethod>BASELINE</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineContext::BASELINE</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2942</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2942</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterBaseline</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2938</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2938</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitBaseline</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$BaselineContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$BaselineContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelabelsContext</mutatedClass><mutatedMethod>RELABELS</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$RelabelsContext::RELABELS</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelabelsContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelabelsContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$RelabelsContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelabelsContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$RelabelsContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelabelsContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelabelsContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterRelabels</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelabelsContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelabelsContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitRelabels</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$RelabelsContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$RelabelsContext::getRuleIndex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExprNodeContext</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;)V</methodDescription><lineNumber>557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpression_thenReturnToStringTreeIs782047842()]</killingTest><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser$ExprNodeContext::copyFrom</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExprNodeContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExprNodeContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ExprNodeContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExprNodeContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ExprNodeContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExprNodeContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExprNodeContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterExprNode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExprNodeContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExprNodeContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitExprNode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExprNodeContext</mutatedClass><mutatedMethod>expressionNode</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionNodeContext;</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ExprNodeContext::expressionNode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Sort_label_valuesContext</mutatedClass><mutatedMethod>SORT_LABEL_VALUES</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2697</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_label_valuesContext::SORT_LABEL_VALUES</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Sort_label_valuesContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Sort_label_valuesContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_label_valuesContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Sort_label_valuesContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_label_valuesContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Sort_label_valuesContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Sort_label_valuesContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterSort_label_values</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Sort_label_valuesContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Sort_label_valuesContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitSort_label_values</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Sort_label_valuesContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_label_valuesContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOPContext</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;)V</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOPContext::copyFrom</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOPContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOPContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOPContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterTopNOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOPContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitTopNOP</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$TopNOPContext</mutatedClass><mutatedMethod>topN</mutatedMethod><methodDescription>()Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$TopNContext;</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$TopNOPContext::topN</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParameterContext</mutatedClass><mutatedMethod>INTEGER</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ParameterContext::INTEGER</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParameterContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParameterContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ParameterContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParameterContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$ParameterContext::accept</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParameterContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParameterContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterParameter</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParameterContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParameterContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitParameter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ParameterContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$ParameterContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Sort_valuesContext</mutatedClass><mutatedMethod>SORT_VALUES</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_valuesContext::SORT_VALUES</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Sort_valuesContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2669</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Sort_valuesContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2669</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_valuesContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Sort_valuesContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2670</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_valuesContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Sort_valuesContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Sort_valuesContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterSort_values</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Sort_valuesContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Sort_valuesContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitSort_values</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Sort_valuesContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$Sort_valuesContext::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator1Context</mutatedClass><mutatedMethod>ROUND</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>2021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator1Context::ROUND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator1Context</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator1Context</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator1Context::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator1Context</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>2037</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator1Context::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator1Context</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2028</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator1Context</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2028</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterMathematical_operator1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator1Context</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2032</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator1Context</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>2032</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitMathematical_operator1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$Mathematical_operator1Context</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2025</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$Mathematical_operator1Context::getRuleIndex</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelValueContext</mutatedClass><mutatedMethod>VALUE_STRING</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/tree/TerminalNode;</methodDescription><lineNumber>1608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelValueContext::VALUE_STRING</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelValueContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelValueContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelValueContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelValueContext</mutatedClass><mutatedMethod>accept</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeVisitor;)Ljava/lang/Object;</methodDescription><lineNumber>1624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTest/><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelValueContext::accept</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelValueContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelValueContext</mutatedClass><mutatedMethod>enterRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::enterLabelValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelValueContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelValueContext</mutatedClass><mutatedMethod>exitRule</mutatedMethod><methodDescription>(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V</methodDescription><lineNumber>1619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTest/><description>removed call to org/apache/skywalking/mqe/rt/grammar/MQEParserListener::exitLabelValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$LabelValueContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest/><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$LabelValueContext::getRuleIndex</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQELexer.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQELexer</mutatedClass><mutatedMethod>getATN</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/atn/ATN;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testParameter_thenReturnStartTokenSourceAtnDecisionToStateSizeIsL_brace()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQELexer::getATN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQELexer.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQELexer</mutatedClass><mutatedMethod>getChannelNames</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQELexerDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQELexerDiffblueTest]/[method:testGettersAndSetters()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQELexer::getChannelNames</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQELexer.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQELexer</mutatedClass><mutatedMethod>getGrammarFileName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQELexerDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQELexerDiffblueTest]/[method:testGettersAndSetters()]</killingTest><description>replaced return value with &quot;&quot; for org/apache/skywalking/mqe/rt/grammar/MQELexer::getGrammarFileName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQELexer.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQELexer</mutatedClass><mutatedMethod>getModeNames</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQELexerDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQELexerDiffblueTest]/[method:testGettersAndSetters()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQELexer::getModeNames</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQELexer.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQELexer</mutatedClass><mutatedMethod>getRuleNames</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQELexerDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQELexerDiffblueTest]/[method:testGettersAndSetters()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQELexer::getRuleNames</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQELexer.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQELexer</mutatedClass><mutatedMethod>getSerializedATN</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQELexerDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQELexerDiffblueTest]/[method:testGettersAndSetters()]</killingTest><description>replaced return value with &quot;&quot; for org/apache/skywalking/mqe/rt/grammar/MQELexer::getSerializedATN</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQELexer.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQELexer</mutatedClass><mutatedMethod>getTokenNames</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQELexerDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQELexerDiffblueTest]/[method:testGettersAndSetters()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQELexer::getTokenNames</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQELexer.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQELexer</mutatedClass><mutatedMethod>getVocabulary</mutatedMethod><methodDescription>()Lorg/antlr/v4/runtime/Vocabulary;</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQELexerDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQELexerDiffblueTest]/[method:testGettersAndSetters()]</killingTest><description>replaced return value with null for org/apache/skywalking/mqe/rt/grammar/MQELexer::getVocabulary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionContext</mutatedClass><mutatedMethod>copyFrom</mutatedMethod><methodDescription>(Lorg/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext;)V</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testExpression_thenReturnToStringTreeIs782047842()]</killingTest><description>removed call to org/antlr/v4/runtime/ParserRuleContext::copyFrom</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MQEParser.java</sourceFile><mutatedClass>org.apache.skywalking.mqe.rt.grammar.MQEParser$ExpressionContext</mutatedClass><mutatedMethod>getRuleIndex</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTest>org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest.[engine:junit-jupiter]/[class:org.apache.skywalking.mqe.rt.grammar.MQEParserDiffblueTest]/[method:testAggregationOpContextNewAggregationOpContext_thenReturnTextIsEmptyString()]</killingTest><description>replaced int return with 0 for org/apache/skywalking/mqe/rt/grammar/MQEParser$ExpressionContext::getRuleIndex</description></mutation>
</mutations>
